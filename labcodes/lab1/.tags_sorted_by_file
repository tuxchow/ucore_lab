!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_PROGRAM_VERSION	5.8	//
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
.DEFAULT_GOAL	Makefile	/^.DEFAULT_GOAL := TARGETS$/;"	m
ALLDEPS	Makefile	/^ALLDEPS	:=$/;"	m
ALLOBJS	Makefile	/^ALLOBJS	:=$/;"	m
AWK	Makefile	/^AWK		:= awk$/;"	m
BINDIR	Makefile	/^BINDIR	:= bin$/;"	m
CC	Makefile	/^CC		:= $(GCCPREFIX)gcc$/;"	m
CC	Makefile	/^CC		:= clang$/;"	m
CFLAGS	Makefile	/^CFLAGS	:= -fno-builtin -Wall -g -m32 -mno-sse -nostdinc $(DEFS)$/;"	m
CFLAGS	Makefile	/^CFLAGS	:= -fno-builtin -Wall -ggdb -m32 -gstabs -nostdinc $(DEFS)$/;"	m
COPY	Makefile	/^COPY	:= cp$/;"	m
CTYPE	Makefile	/^CTYPE	:= c S$/;"	m
EMPTY	Makefile	/^EMPTY	:=$/;"	m
GCCPREFIX	Makefile	/^GCCPREFIX := $(shell if i386-elf-objdump -i 2>&1 | grep '^elf32-i386$$' >\/dev\/null 2>&1; \\$/;"	m
GRADE_GDB_IN	Makefile	/^GRADE_GDB_IN	:= .gdb.in$/;"	m
GRADE_QEMU_OUT	Makefile	/^GRADE_QEMU_OUT	:= .qemu.out$/;"	m
HANDIN	Makefile	/^HANDIN			:= proj$(PROJ)-handin.tar.gz$/;"	m
HOSTCC	Makefile	/^HOSTCC		:= clang$/;"	m
HOSTCC	Makefile	/^HOSTCC		:= gcc$/;"	m
HOSTCFLAGS	Makefile	/^HOSTCFLAGS	:= -g -Wall -O2$/;"	m
IGNORE_ALLDEPS	Makefile	/^IGNORE_ALLDEPS	= clean \\$/;"	m
KOBJS	Makefile	/^KOBJS	= $(call read_packet,kernel libs)$/;"	m
LD	Makefile	/^LD      := $(GCCPREFIX)ld$/;"	m
LDFLAGS	Makefile	/^LDFLAGS	:= -m $(shell $(LD) -V | grep elf_i386 2>\/dev\/null)$/;"	m
MAKEOPTS	Makefile	/^MAKEOPTS		:= --quiet --no-print-directory$/;"	m
MKDIR	Makefile	/^MKDIR   := mkdir -p$/;"	m
MV	Makefile	/^MV		:= mv$/;"	m
OBJCOPY	Makefile	/^OBJCOPY := $(GCCPREFIX)objcopy$/;"	m
OBJDIR	Makefile	/^OBJDIR	:= obj$/;"	m
OBJDUMP	Makefile	/^OBJDUMP := $(GCCPREFIX)objdump$/;"	m
PROJ	Makefile	/^PROJ	:= challenge$/;"	m
QEMU	Makefile	/^QEMU := $(shell if which qemu-system-i386 > \/dev\/null; \\$/;"	m
RM	Makefile	/^RM		:= rm -f$/;"	m
SED	Makefile	/^SED		:= sed$/;"	m
SH	Makefile	/^SH		:= sh$/;"	m
SLASH	Makefile	/^SLASH	:= \/$/;"	m
SPACE	Makefile	/^SPACE	:= $(EMPTY) $(EMPTY)$/;"	m
TARGETS	Makefile	/^TARGETS	:=$/;"	m
TERMINAL	Makefile	/^TERMINAL        :=gnome-terminal$/;"	m
TOUCH	Makefile	/^TOUCH	:= touch -c$/;"	m
TOUCH_FILES	Makefile	/^TOUCH_FILES		:= kern\/trap\/trap.c$/;"	m
TR	Makefile	/^TR		:= tr$/;"	m
UCOREIMG	Makefile	/^UCOREIMG	:= $(call totarget,ucore.img)$/;"	m
V	Makefile	/^V       := @$/;"	m
add_files_cc	Makefile	/^add_files_cc = $(call add_files,$(1),$(CC),$(CFLAGS) $(3),$(2),$(4))$/;"	m
add_files_host	Makefile	/^add_files_host = $(call add_files,$(1),$(HOSTCC),$(HOSTCFLAGS),$(2),$(3))$/;"	m
asmfile	Makefile	/^asmfile = $(call cgtype,$(call toobj,$(1)),o,asm)$/;"	m
bootblock	Makefile	/^bootblock = $(call totarget,bootblock)$/;"	m
bootfiles	Makefile	/^bootfiles = $(call listf_cc,boot)$/;"	m
cgtype	Makefile	/^cgtype = $(patsubst %.$(2),%.$(3),$(1))$/;"	m
create_target_cc	Makefile	/^create_target_cc = $(call create_target,$(1),$(2),$(3),$(CC),$(CFLAGS))$/;"	m
create_target_host	Makefile	/^create_target_host = $(call create_target,$(1),$(2),$(3),$(HOSTCC),$(HOSTCFLAGS))$/;"	m
kernel	Makefile	/^kernel = $(call totarget,kernel)$/;"	m
listf_cc	Makefile	/^listf_cc = $(call listf,$(1),$(CTYPE))$/;"	m
match	Makefile	/^match = $(shell echo $(2) | $(AWK) '{for(i=1;i<=NF;i++){if(match("$(1)","^"$$(i)"$$")){exit 1;}}}'; echo $$?)$/;"	m
objfile	Makefile	/^objfile = $(call toobj,$(1))$/;"	m
outfile	Makefile	/^outfile = $(call cgtype,$(call toobj,$(1)),o,out)$/;"	m
symfile	Makefile	/^symfile = $(call cgtype,$(call toobj,$(1)),o,sym)$/;"	m
SEG_ASM	boot/asm.h	/^#define SEG_ASM(/;"	d
SEG_NULLASM	boot/asm.h	/^#define SEG_NULLASM /;"	d
STA_A	boot/asm.h	/^#define STA_A /;"	d
STA_C	boot/asm.h	/^#define STA_C /;"	d
STA_E	boot/asm.h	/^#define STA_E /;"	d
STA_R	boot/asm.h	/^#define STA_R /;"	d
STA_W	boot/asm.h	/^#define STA_W /;"	d
STA_X	boot/asm.h	/^#define STA_X /;"	d
__BOOT_ASM_H__	boot/asm.h	/^#define __BOOT_ASM_H__$/;"	d
gdt	boot/bootasm.S	/^gdt:$/;"	l
gdtdesc	boot/bootasm.S	/^gdtdesc:$/;"	l
protcseg	boot/bootasm.S	/^protcseg:$/;"	l
spin	boot/bootasm.S	/^spin:$/;"	l
start	boot/bootasm.S	/^start:$/;"	l
ELFHDR	boot/bootmain.c	/^#define ELFHDR /;"	d	file:
SECTSIZE	boot/bootmain.c	/^#define SECTSIZE /;"	d	file:
bootmain	boot/bootmain.c	/^bootmain(void) {$/;"	f
readsect	boot/bootmain.c	/^readsect(void *dst, uint32_t secno) {$/;"	f	file:
readseg	boot/bootmain.c	/^readseg(uintptr_t va, uint32_t count, uint32_t offset) {$/;"	f	file:
waitdisk	boot/bootmain.c	/^waitdisk(void) {$/;"	f	file:
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
__KERN_DEBUG_ASSERT_H__	kern/debug/assert.h	/^#define __KERN_DEBUG_ASSERT_H__$/;"	d
assert	kern/debug/assert.h	/^#define assert(/;"	d
panic	kern/debug/assert.h	/^#define panic(/;"	d
static_assert	kern/debug/assert.h	/^#define static_assert(/;"	d
warn	kern/debug/assert.h	/^#define warn(/;"	d
STACKFRAME_DEPTH	kern/debug/kdebug.c	/^#define STACKFRAME_DEPTH /;"	d	file:
debuginfo_eip	kern/debug/kdebug.c	/^debuginfo_eip(uintptr_t addr, struct eipdebuginfo *info) {$/;"	f
eip_file	kern/debug/kdebug.c	/^    const char *eip_file;                   \/\/ source code filename for eip$/;"	m	struct:eipdebuginfo	file:
eip_fn_addr	kern/debug/kdebug.c	/^    uintptr_t eip_fn_addr;                  \/\/ start address of function$/;"	m	struct:eipdebuginfo	file:
eip_fn_name	kern/debug/kdebug.c	/^    const char *eip_fn_name;                \/\/ name of function containing eip$/;"	m	struct:eipdebuginfo	file:
eip_fn_namelen	kern/debug/kdebug.c	/^    int eip_fn_namelen;                     \/\/ length of function's name$/;"	m	struct:eipdebuginfo	file:
eip_fn_narg	kern/debug/kdebug.c	/^    int eip_fn_narg;                        \/\/ number of function arguments$/;"	m	struct:eipdebuginfo	file:
eip_line	kern/debug/kdebug.c	/^    int eip_line;                           \/\/ source code line number for eip$/;"	m	struct:eipdebuginfo	file:
eipdebuginfo	kern/debug/kdebug.c	/^struct eipdebuginfo {$/;"	s	file:
print_debuginfo	kern/debug/kdebug.c	/^print_debuginfo(uintptr_t eip) {$/;"	f
print_kerninfo	kern/debug/kdebug.c	/^print_kerninfo(void) {$/;"	f
print_stackframe	kern/debug/kdebug.c	/^print_stackframe(void) {$/;"	f
read_eip	kern/debug/kdebug.c	/^read_eip(void) {$/;"	f	file:
stab_binsearch	kern/debug/kdebug.c	/^stab_binsearch(const struct stab *stabs, int *region_left, int *region_right,$/;"	f	file:
__KERN_DEBUG_KDEBUG_H__	kern/debug/kdebug.h	/^#define __KERN_DEBUG_KDEBUG_H__$/;"	d
MAXARGS	kern/debug/kmonitor.c	/^#define MAXARGS /;"	d	file:
NCOMMANDS	kern/debug/kmonitor.c	/^#define NCOMMANDS /;"	d	file:
WHITESPACE	kern/debug/kmonitor.c	/^#define WHITESPACE /;"	d	file:
command	kern/debug/kmonitor.c	/^struct command {$/;"	s	file:
commands	kern/debug/kmonitor.c	/^static struct command commands[] = {$/;"	v	typeref:struct:command	file:
desc	kern/debug/kmonitor.c	/^    const char *desc;$/;"	m	struct:command	file:
func	kern/debug/kmonitor.c	/^    int(*func)(int argc, char **argv, struct trapframe *tf);$/;"	m	struct:command	file:
kmonitor	kern/debug/kmonitor.c	/^kmonitor(struct trapframe *tf) {$/;"	f
mon_backtrace	kern/debug/kmonitor.c	/^mon_backtrace(int argc, char **argv, struct trapframe *tf) {$/;"	f
mon_help	kern/debug/kmonitor.c	/^mon_help(int argc, char **argv, struct trapframe *tf) {$/;"	f
mon_kerninfo	kern/debug/kmonitor.c	/^mon_kerninfo(int argc, char **argv, struct trapframe *tf) {$/;"	f
name	kern/debug/kmonitor.c	/^    const char *name;$/;"	m	struct:command	file:
parse	kern/debug/kmonitor.c	/^parse(char *buf, char **argv) {$/;"	f	file:
runcmd	kern/debug/kmonitor.c	/^runcmd(char *buf, struct trapframe *tf) {$/;"	f	file:
__KERN_DEBUG_MONITOR_H__	kern/debug/kmonitor.h	/^#define __KERN_DEBUG_MONITOR_H__$/;"	d
__panic	kern/debug/panic.c	/^__panic(const char *file, int line, const char *fmt, ...) {$/;"	f
__warn	kern/debug/panic.c	/^__warn(const char *file, int line, const char *fmt, ...) {$/;"	f
is_kernel_panic	kern/debug/panic.c	/^is_kernel_panic(void) {$/;"	f
is_panic	kern/debug/panic.c	/^static bool is_panic = 0;$/;"	v	file:
N_BCOMM	kern/debug/stab.h	/^#define N_BCOMM /;"	d
N_BINCL	kern/debug/stab.h	/^#define N_BINCL /;"	d
N_BSLINE	kern/debug/stab.h	/^#define N_BSLINE /;"	d
N_DSLINE	kern/debug/stab.h	/^#define N_DSLINE /;"	d
N_ECOML	kern/debug/stab.h	/^#define N_ECOML /;"	d
N_ECOMM	kern/debug/stab.h	/^#define N_ECOMM /;"	d
N_EINCL	kern/debug/stab.h	/^#define N_EINCL /;"	d
N_ENTRY	kern/debug/stab.h	/^#define N_ENTRY /;"	d
N_EXCL	kern/debug/stab.h	/^#define N_EXCL /;"	d
N_FNAME	kern/debug/stab.h	/^#define N_FNAME /;"	d
N_FUN	kern/debug/stab.h	/^#define N_FUN /;"	d
N_GSYM	kern/debug/stab.h	/^#define N_GSYM /;"	d
N_LBRAC	kern/debug/stab.h	/^#define N_LBRAC /;"	d
N_LCSYM	kern/debug/stab.h	/^#define N_LCSYM /;"	d
N_LENG	kern/debug/stab.h	/^#define N_LENG /;"	d
N_LSYM	kern/debug/stab.h	/^#define N_LSYM /;"	d
N_MAIN	kern/debug/stab.h	/^#define N_MAIN /;"	d
N_PC	kern/debug/stab.h	/^#define N_PC /;"	d
N_PSYM	kern/debug/stab.h	/^#define N_PSYM /;"	d
N_RBRAC	kern/debug/stab.h	/^#define N_RBRAC /;"	d
N_RSYM	kern/debug/stab.h	/^#define N_RSYM /;"	d
N_SLINE	kern/debug/stab.h	/^#define N_SLINE /;"	d
N_SO	kern/debug/stab.h	/^#define N_SO /;"	d
N_SOL	kern/debug/stab.h	/^#define N_SOL /;"	d
N_SSYM	kern/debug/stab.h	/^#define N_SSYM /;"	d
N_STSYM	kern/debug/stab.h	/^#define N_STSYM /;"	d
__KERN_DEBUG_STAB_H__	kern/debug/stab.h	/^#define __KERN_DEBUG_STAB_H__$/;"	d
n_desc	kern/debug/stab.h	/^    uint16_t n_desc;        \/\/ description field$/;"	m	struct:stab
n_other	kern/debug/stab.h	/^    uint8_t n_other;        \/\/ misc info (usually empty)$/;"	m	struct:stab
n_strx	kern/debug/stab.h	/^    uint32_t n_strx;        \/\/ index into string table of name$/;"	m	struct:stab
n_type	kern/debug/stab.h	/^    uint8_t n_type;         \/\/ type of symbol$/;"	m	struct:stab
n_value	kern/debug/stab.h	/^    uintptr_t n_value;      \/\/ value of symbol$/;"	m	struct:stab
stab	kern/debug/stab.h	/^struct stab {$/;"	s
IO_TIMER1	kern/driver/clock.c	/^#define IO_TIMER1 /;"	d	file:
TIMER_16BIT	kern/driver/clock.c	/^#define TIMER_16BIT /;"	d	file:
TIMER_DIV	kern/driver/clock.c	/^#define TIMER_DIV(/;"	d	file:
TIMER_FREQ	kern/driver/clock.c	/^#define TIMER_FREQ /;"	d	file:
TIMER_MODE	kern/driver/clock.c	/^#define TIMER_MODE /;"	d	file:
TIMER_RATEGEN	kern/driver/clock.c	/^#define TIMER_RATEGEN /;"	d	file:
TIMER_SEL0	kern/driver/clock.c	/^#define TIMER_SEL0 /;"	d	file:
clock_init	kern/driver/clock.c	/^clock_init(void) {$/;"	f
ticks	kern/driver/clock.c	/^volatile size_t ticks;$/;"	v
__KERN_DRIVER_CLOCK_H__	kern/driver/clock.h	/^#define __KERN_DRIVER_CLOCK_H__$/;"	d
ALT	kern/driver/console.c	/^#define ALT /;"	d	file:
C	kern/driver/console.c	/^#define C(/;"	d	file:
CAPSLOCK	kern/driver/console.c	/^#define CAPSLOCK /;"	d	file:
CGA_BASE	kern/driver/console.c	/^#define CGA_BASE /;"	d	file:
CGA_BUF	kern/driver/console.c	/^#define CGA_BUF /;"	d	file:
COM1	kern/driver/console.c	/^#define COM1 /;"	d	file:
COM_DLL	kern/driver/console.c	/^#define COM_DLL /;"	d	file:
COM_DLM	kern/driver/console.c	/^#define COM_DLM /;"	d	file:
COM_FCR	kern/driver/console.c	/^#define COM_FCR /;"	d	file:
COM_IER	kern/driver/console.c	/^#define COM_IER /;"	d	file:
COM_IER_RDI	kern/driver/console.c	/^#define COM_IER_RDI /;"	d	file:
COM_IIR	kern/driver/console.c	/^#define COM_IIR /;"	d	file:
COM_LCR	kern/driver/console.c	/^#define COM_LCR /;"	d	file:
COM_LCR_DLAB	kern/driver/console.c	/^#define COM_LCR_DLAB /;"	d	file:
COM_LCR_WLEN8	kern/driver/console.c	/^#define COM_LCR_WLEN8 /;"	d	file:
COM_LSR	kern/driver/console.c	/^#define COM_LSR /;"	d	file:
COM_LSR_DATA	kern/driver/console.c	/^#define COM_LSR_DATA /;"	d	file:
COM_LSR_TSRE	kern/driver/console.c	/^#define COM_LSR_TSRE /;"	d	file:
COM_LSR_TXRDY	kern/driver/console.c	/^#define COM_LSR_TXRDY /;"	d	file:
COM_MCR	kern/driver/console.c	/^#define COM_MCR /;"	d	file:
COM_MCR_DTR	kern/driver/console.c	/^#define COM_MCR_DTR /;"	d	file:
COM_MCR_OUT2	kern/driver/console.c	/^#define COM_MCR_OUT2 /;"	d	file:
COM_MCR_RTS	kern/driver/console.c	/^#define COM_MCR_RTS /;"	d	file:
COM_RX	kern/driver/console.c	/^#define COM_RX /;"	d	file:
COM_TX	kern/driver/console.c	/^#define COM_TX /;"	d	file:
CONSBUFSIZE	kern/driver/console.c	/^#define CONSBUFSIZE /;"	d	file:
CRT_COLS	kern/driver/console.c	/^#define CRT_COLS /;"	d	file:
CRT_ROWS	kern/driver/console.c	/^#define CRT_ROWS /;"	d	file:
CRT_SIZE	kern/driver/console.c	/^#define CRT_SIZE /;"	d	file:
CTL	kern/driver/console.c	/^#define CTL /;"	d	file:
E0ESC	kern/driver/console.c	/^#define E0ESC /;"	d	file:
LPTPORT	kern/driver/console.c	/^#define LPTPORT /;"	d	file:
MONO_BASE	kern/driver/console.c	/^#define MONO_BASE /;"	d	file:
MONO_BUF	kern/driver/console.c	/^#define MONO_BUF /;"	d	file:
NO	kern/driver/console.c	/^#define NO /;"	d	file:
NUMLOCK	kern/driver/console.c	/^#define NUMLOCK /;"	d	file:
SCROLLLOCK	kern/driver/console.c	/^#define SCROLLLOCK /;"	d	file:
SHIFT	kern/driver/console.c	/^#define SHIFT /;"	d	file:
addr_6845	kern/driver/console.c	/^static uint16_t addr_6845;$/;"	v	file:
buf	kern/driver/console.c	/^    uint8_t buf[CONSBUFSIZE];$/;"	m	struct:__anon1	file:
cga_init	kern/driver/console.c	/^cga_init(void) {$/;"	f	file:
cga_putc	kern/driver/console.c	/^cga_putc(int c) {$/;"	f	file:
charcode	kern/driver/console.c	/^static uint8_t *charcode[4] = {$/;"	v	file:
cons	kern/driver/console.c	/^} cons;$/;"	v	typeref:struct:__anon1	file:
cons_getc	kern/driver/console.c	/^cons_getc(void) {$/;"	f
cons_init	kern/driver/console.c	/^cons_init(void) {$/;"	f
cons_intr	kern/driver/console.c	/^cons_intr(int (*proc)(void)) {$/;"	f	file:
cons_putc	kern/driver/console.c	/^cons_putc(int c) {$/;"	f
crt_buf	kern/driver/console.c	/^static uint16_t *crt_buf;$/;"	v	file:
crt_pos	kern/driver/console.c	/^static uint16_t crt_pos;$/;"	v	file:
ctlmap	kern/driver/console.c	/^static uint8_t ctlmap[256] = {$/;"	v	file:
delay	kern/driver/console.c	/^delay(void) {$/;"	f	file:
kbd_init	kern/driver/console.c	/^kbd_init(void) {$/;"	f	file:
kbd_intr	kern/driver/console.c	/^kbd_intr(void) {$/;"	f	file:
kbd_proc_data	kern/driver/console.c	/^kbd_proc_data(void) {$/;"	f	file:
lpt_putc	kern/driver/console.c	/^lpt_putc(int c) {$/;"	f	file:
lpt_putc_sub	kern/driver/console.c	/^lpt_putc_sub(int c) {$/;"	f	file:
normalmap	kern/driver/console.c	/^static uint8_t normalmap[256] = {$/;"	v	file:
rpos	kern/driver/console.c	/^    uint32_t rpos;$/;"	m	struct:__anon1	file:
serial_exists	kern/driver/console.c	/^static bool serial_exists = 0;$/;"	v	file:
serial_init	kern/driver/console.c	/^serial_init(void) {$/;"	f	file:
serial_intr	kern/driver/console.c	/^serial_intr(void) {$/;"	f
serial_proc_data	kern/driver/console.c	/^serial_proc_data(void) {$/;"	f	file:
serial_putc	kern/driver/console.c	/^serial_putc(int c) {$/;"	f	file:
serial_putc_sub	kern/driver/console.c	/^serial_putc_sub(int c) {$/;"	f	file:
shiftcode	kern/driver/console.c	/^static uint8_t shiftcode[256] = {$/;"	v	file:
shiftmap	kern/driver/console.c	/^static uint8_t shiftmap[256] = {$/;"	v	file:
togglecode	kern/driver/console.c	/^static uint8_t togglecode[256] = {$/;"	v	file:
wpos	kern/driver/console.c	/^    uint32_t wpos;$/;"	m	struct:__anon1	file:
__KERN_DRIVER_CONSOLE_H__	kern/driver/console.h	/^#define __KERN_DRIVER_CONSOLE_H__$/;"	d
intr_disable	kern/driver/intr.c	/^intr_disable(void) {$/;"	f
intr_enable	kern/driver/intr.c	/^intr_enable(void) {$/;"	f
__KERN_DRIVER_INTR_H__	kern/driver/intr.h	/^#define __KERN_DRIVER_INTR_H__$/;"	d
BS_OCMD	kern/driver/kbdreg.h	/^#define BS_OCMD /;"	d
CMDBYTE	kern/driver/kbdreg.h	/^#define CMDBYTE /;"	d
KBCMDP	kern/driver/kbdreg.h	/^#define KBCMDP /;"	d
KBC_AUXDISABLE	kern/driver/kbdreg.h	/^#define KBC_AUXDISABLE /;"	d
KBC_AUXECHO	kern/driver/kbdreg.h	/^#define KBC_AUXECHO /;"	d
KBC_AUXENABLE	kern/driver/kbdreg.h	/^#define KBC_AUXENABLE /;"	d
KBC_AUXTEST	kern/driver/kbdreg.h	/^#define KBC_AUXTEST /;"	d
KBC_AUXWRITE	kern/driver/kbdreg.h	/^#define KBC_AUXWRITE /;"	d
KBC_DISABLE	kern/driver/kbdreg.h	/^#define KBC_DISABLE /;"	d
KBC_ECHO	kern/driver/kbdreg.h	/^#define KBC_ECHO /;"	d
KBC_ENABLE	kern/driver/kbdreg.h	/^#define KBC_ENABLE /;"	d
KBC_KBDDISABLE	kern/driver/kbdreg.h	/^#define KBC_KBDDISABLE /;"	d
KBC_KBDECHO	kern/driver/kbdreg.h	/^#define KBC_KBDECHO /;"	d
KBC_KBDENABLE	kern/driver/kbdreg.h	/^#define KBC_KBDENABLE /;"	d
KBC_KBDTEST	kern/driver/kbdreg.h	/^#define KBC_KBDTEST /;"	d
KBC_MODEIND	kern/driver/kbdreg.h	/^#define KBC_MODEIND /;"	d
KBC_PULSE0	kern/driver/kbdreg.h	/^#define KBC_PULSE0 /;"	d
KBC_PULSE1	kern/driver/kbdreg.h	/^#define KBC_PULSE1 /;"	d
KBC_PULSE2	kern/driver/kbdreg.h	/^#define KBC_PULSE2 /;"	d
KBC_PULSE3	kern/driver/kbdreg.h	/^#define KBC_PULSE3 /;"	d
KBC_RAMREAD	kern/driver/kbdreg.h	/^#define KBC_RAMREAD /;"	d
KBC_RAMWRITE	kern/driver/kbdreg.h	/^#define KBC_RAMWRITE /;"	d
KBC_RESEND	kern/driver/kbdreg.h	/^#define KBC_RESEND /;"	d
KBC_RESET	kern/driver/kbdreg.h	/^#define KBC_RESET /;"	d
KBC_SELFTEST	kern/driver/kbdreg.h	/^#define KBC_SELFTEST /;"	d
KBC_SETDEFAULT	kern/driver/kbdreg.h	/^#define KBC_SETDEFAULT /;"	d
KBC_SETTABLE	kern/driver/kbdreg.h	/^#define KBC_SETTABLE /;"	d
KBC_TYPEMATIC	kern/driver/kbdreg.h	/^#define KBC_TYPEMATIC /;"	d
KBDATAP	kern/driver/kbdreg.h	/^#define KBDATAP /;"	d
KBOUTP	kern/driver/kbdreg.h	/^#define KBOUTP /;"	d
KBR_ACK	kern/driver/kbdreg.h	/^#define KBR_ACK /;"	d
KBR_BREAK	kern/driver/kbdreg.h	/^#define KBR_BREAK /;"	d
KBR_ECHO	kern/driver/kbdreg.h	/^#define KBR_ECHO /;"	d
KBR_EXTENDED	kern/driver/kbdreg.h	/^#define KBR_EXTENDED /;"	d
KBR_FAILURE	kern/driver/kbdreg.h	/^#define KBR_FAILURE /;"	d
KBR_OVERRUN	kern/driver/kbdreg.h	/^#define KBR_OVERRUN /;"	d
KBR_RESEND	kern/driver/kbdreg.h	/^#define KBR_RESEND /;"	d
KBR_RSTDONE	kern/driver/kbdreg.h	/^#define KBR_RSTDONE /;"	d
KBSTATP	kern/driver/kbdreg.h	/^#define KBSTATP /;"	d
KBS_DIB	kern/driver/kbdreg.h	/^#define KBS_DIB /;"	d
KBS_IBF	kern/driver/kbdreg.h	/^#define KBS_IBF /;"	d
KBS_NOSEC	kern/driver/kbdreg.h	/^#define KBS_NOSEC /;"	d
KBS_PERR	kern/driver/kbdreg.h	/^#define KBS_PERR /;"	d
KBS_RERR	kern/driver/kbdreg.h	/^#define KBS_RERR /;"	d
KBS_TERR	kern/driver/kbdreg.h	/^#define KBS_TERR /;"	d
KBS_WARM	kern/driver/kbdreg.h	/^#define KBS_WARM /;"	d
KC8_CPU	kern/driver/kbdreg.h	/^#define KC8_CPU /;"	d
KC8_IGNSEC	kern/driver/kbdreg.h	/^#define KC8_IGNSEC /;"	d
KC8_KDISABLE	kern/driver/kbdreg.h	/^#define KC8_KDISABLE /;"	d
KC8_KENABLE	kern/driver/kbdreg.h	/^#define KC8_KENABLE /;"	d
KC8_MDISABLE	kern/driver/kbdreg.h	/^#define KC8_MDISABLE /;"	d
KC8_MENABLE	kern/driver/kbdreg.h	/^#define KC8_MENABLE /;"	d
KC8_TRANS	kern/driver/kbdreg.h	/^#define KC8_TRANS /;"	d
KEY_DEL	kern/driver/kbdreg.h	/^#define KEY_DEL /;"	d
KEY_DN	kern/driver/kbdreg.h	/^#define KEY_DN /;"	d
KEY_END	kern/driver/kbdreg.h	/^#define KEY_END /;"	d
KEY_HOME	kern/driver/kbdreg.h	/^#define KEY_HOME /;"	d
KEY_INS	kern/driver/kbdreg.h	/^#define KEY_INS /;"	d
KEY_LF	kern/driver/kbdreg.h	/^#define KEY_LF /;"	d
KEY_PGDN	kern/driver/kbdreg.h	/^#define KEY_PGDN /;"	d
KEY_PGUP	kern/driver/kbdreg.h	/^#define KEY_PGUP /;"	d
KEY_RT	kern/driver/kbdreg.h	/^#define KEY_RT /;"	d
KEY_UP	kern/driver/kbdreg.h	/^#define KEY_UP /;"	d
K_LDCMDBYTE	kern/driver/kbdreg.h	/^#define K_LDCMDBYTE /;"	d
K_RDCMDBYTE	kern/driver/kbdreg.h	/^#define K_RDCMDBYTE /;"	d
__KERN_DRIVER_KBDREG_H__	kern/driver/kbdreg.h	/^#define __KERN_DRIVER_KBDREG_H__$/;"	d
IO_PIC1	kern/driver/picirq.c	/^#define IO_PIC1 /;"	d	file:
IO_PIC2	kern/driver/picirq.c	/^#define IO_PIC2 /;"	d	file:
IRQ_SLAVE	kern/driver/picirq.c	/^#define IRQ_SLAVE /;"	d	file:
did_init	kern/driver/picirq.c	/^static bool did_init = 0;$/;"	v	file:
irq_mask	kern/driver/picirq.c	/^static uint16_t irq_mask = 0xFFFF & ~(1 << IRQ_SLAVE);$/;"	v	file:
pic_enable	kern/driver/picirq.c	/^pic_enable(unsigned int irq) {$/;"	f
pic_init	kern/driver/picirq.c	/^pic_init(void) {$/;"	f
pic_setmask	kern/driver/picirq.c	/^pic_setmask(uint16_t mask) {$/;"	f	file:
IRQ_OFFSET	kern/driver/picirq.h	/^#define IRQ_OFFSET /;"	d
__KERN_DRIVER_PICIRQ_H__	kern/driver/picirq.h	/^#define __KERN_DRIVER_PICIRQ_H__$/;"	d
grade_backtrace	kern/init/init.c	/^grade_backtrace(void) {$/;"	f
grade_backtrace0	kern/init/init.c	/^grade_backtrace0(int arg0, int arg1, int arg2) {$/;"	f
grade_backtrace1	kern/init/init.c	/^grade_backtrace1(int arg0, int arg1) {$/;"	f
grade_backtrace2	kern/init/init.c	/^grade_backtrace2(int arg0, int arg1, int arg2, int arg3) {$/;"	f
kern_init	kern/init/init.c	/^kern_init(void) {$/;"	f
lab1_print_cur_status	kern/init/init.c	/^lab1_print_cur_status(void) {$/;"	f	file:
lab1_switch_test	kern/init/init.c	/^lab1_switch_test(void) {$/;"	f	file:
lab1_switch_to_kernel	kern/init/init.c	/^lab1_switch_to_kernel(void) {$/;"	f	file:
lab1_switch_to_user	kern/init/init.c	/^lab1_switch_to_user(void) {$/;"	f	file:
BUFSIZE	kern/libs/readline.c	/^#define BUFSIZE /;"	d	file:
buf	kern/libs/readline.c	/^static char buf[BUFSIZE];$/;"	v	file:
readline	kern/libs/readline.c	/^readline(const char *prompt) {$/;"	f
cprintf	kern/libs/stdio.c	/^cprintf(const char *fmt, ...) {$/;"	f
cputch	kern/libs/stdio.c	/^cputch(int c, int *cnt) {$/;"	f	file:
cputchar	kern/libs/stdio.c	/^cputchar(int c) {$/;"	f
cputs	kern/libs/stdio.c	/^cputs(const char *str) {$/;"	f
getchar	kern/libs/stdio.c	/^getchar(void) {$/;"	f
vcprintf	kern/libs/stdio.c	/^vcprintf(const char *fmt, va_list ap) {$/;"	f
DPL_KERNEL	kern/mm/memlayout.h	/^#define DPL_KERNEL /;"	d
DPL_USER	kern/mm/memlayout.h	/^#define DPL_USER /;"	d
GD_KDATA	kern/mm/memlayout.h	/^#define GD_KDATA /;"	d
GD_KTEXT	kern/mm/memlayout.h	/^#define GD_KTEXT /;"	d
GD_TSS	kern/mm/memlayout.h	/^#define GD_TSS /;"	d
GD_UDATA	kern/mm/memlayout.h	/^#define GD_UDATA /;"	d
GD_UTEXT	kern/mm/memlayout.h	/^#define GD_UTEXT /;"	d
KERNEL_CS	kern/mm/memlayout.h	/^#define KERNEL_CS /;"	d
KERNEL_DS	kern/mm/memlayout.h	/^#define KERNEL_DS /;"	d
SEG_KDATA	kern/mm/memlayout.h	/^#define SEG_KDATA /;"	d
SEG_KTEXT	kern/mm/memlayout.h	/^#define SEG_KTEXT /;"	d
SEG_TSS	kern/mm/memlayout.h	/^#define SEG_TSS /;"	d
SEG_UDATA	kern/mm/memlayout.h	/^#define SEG_UDATA /;"	d
SEG_UTEXT	kern/mm/memlayout.h	/^#define SEG_UTEXT /;"	d
USER_CS	kern/mm/memlayout.h	/^#define USER_CS /;"	d
USER_DS	kern/mm/memlayout.h	/^#define USER_DS /;"	d
__KERN_MM_MEMLAYOUT_H__	kern/mm/memlayout.h	/^#define __KERN_MM_MEMLAYOUT_H__$/;"	d
FL_AC	kern/mm/mmu.h	/^#define FL_AC /;"	d
FL_AF	kern/mm/mmu.h	/^#define FL_AF /;"	d
FL_CF	kern/mm/mmu.h	/^#define FL_CF /;"	d
FL_DF	kern/mm/mmu.h	/^#define FL_DF /;"	d
FL_ID	kern/mm/mmu.h	/^#define FL_ID /;"	d
FL_IF	kern/mm/mmu.h	/^#define FL_IF /;"	d
FL_IOPL_0	kern/mm/mmu.h	/^#define FL_IOPL_0 /;"	d
FL_IOPL_1	kern/mm/mmu.h	/^#define FL_IOPL_1 /;"	d
FL_IOPL_2	kern/mm/mmu.h	/^#define FL_IOPL_2 /;"	d
FL_IOPL_3	kern/mm/mmu.h	/^#define FL_IOPL_3 /;"	d
FL_IOPL_MASK	kern/mm/mmu.h	/^#define FL_IOPL_MASK /;"	d
FL_NT	kern/mm/mmu.h	/^#define FL_NT /;"	d
FL_OF	kern/mm/mmu.h	/^#define FL_OF /;"	d
FL_PF	kern/mm/mmu.h	/^#define FL_PF /;"	d
FL_RF	kern/mm/mmu.h	/^#define FL_RF /;"	d
FL_SF	kern/mm/mmu.h	/^#define FL_SF /;"	d
FL_TF	kern/mm/mmu.h	/^#define FL_TF /;"	d
FL_VIF	kern/mm/mmu.h	/^#define FL_VIF /;"	d
FL_VIP	kern/mm/mmu.h	/^#define FL_VIP /;"	d
FL_VM	kern/mm/mmu.h	/^#define FL_VM /;"	d
FL_ZF	kern/mm/mmu.h	/^#define FL_ZF /;"	d
SEG	kern/mm/mmu.h	/^#define SEG(/;"	d
SEG16	kern/mm/mmu.h	/^#define SEG16(/;"	d
SEG_NULL	kern/mm/mmu.h	/^#define SEG_NULL /;"	d
SETCALLGATE	kern/mm/mmu.h	/^#define SETCALLGATE(/;"	d
SETGATE	kern/mm/mmu.h	/^#define SETGATE(/;"	d
STA_A	kern/mm/mmu.h	/^#define STA_A /;"	d
STA_C	kern/mm/mmu.h	/^#define STA_C /;"	d
STA_E	kern/mm/mmu.h	/^#define STA_E /;"	d
STA_R	kern/mm/mmu.h	/^#define STA_R /;"	d
STA_W	kern/mm/mmu.h	/^#define STA_W /;"	d
STA_X	kern/mm/mmu.h	/^#define STA_X /;"	d
STS_CG16	kern/mm/mmu.h	/^#define STS_CG16 /;"	d
STS_CG32	kern/mm/mmu.h	/^#define STS_CG32 /;"	d
STS_IG16	kern/mm/mmu.h	/^#define STS_IG16 /;"	d
STS_IG32	kern/mm/mmu.h	/^#define STS_IG32 /;"	d
STS_LDT	kern/mm/mmu.h	/^#define STS_LDT /;"	d
STS_T16A	kern/mm/mmu.h	/^#define STS_T16A /;"	d
STS_T16B	kern/mm/mmu.h	/^#define STS_T16B /;"	d
STS_T32A	kern/mm/mmu.h	/^#define STS_T32A /;"	d
STS_T32B	kern/mm/mmu.h	/^#define STS_T32B /;"	d
STS_TG	kern/mm/mmu.h	/^#define STS_TG /;"	d
STS_TG16	kern/mm/mmu.h	/^#define STS_TG16 /;"	d
STS_TG32	kern/mm/mmu.h	/^#define STS_TG32 /;"	d
__KERN_MM_MMU_H__	kern/mm/mmu.h	/^#define __KERN_MM_MMU_H__$/;"	d
gatedesc	kern/mm/mmu.h	/^struct gatedesc {$/;"	s
gd_args	kern/mm/mmu.h	/^    unsigned gd_args : 5;            \/\/ # args, 0 for interrupt\/trap gates$/;"	m	struct:gatedesc
gd_dpl	kern/mm/mmu.h	/^    unsigned gd_dpl : 2;            \/\/ descriptor(meaning new) privilege level$/;"	m	struct:gatedesc
gd_off_15_0	kern/mm/mmu.h	/^    unsigned gd_off_15_0 : 16;        \/\/ low 16 bits of offset in segment$/;"	m	struct:gatedesc
gd_off_31_16	kern/mm/mmu.h	/^    unsigned gd_off_31_16 : 16;        \/\/ high bits of offset in segment$/;"	m	struct:gatedesc
gd_p	kern/mm/mmu.h	/^    unsigned gd_p : 1;                \/\/ Present$/;"	m	struct:gatedesc
gd_rsv1	kern/mm/mmu.h	/^    unsigned gd_rsv1 : 3;            \/\/ reserved(should be zero I guess)$/;"	m	struct:gatedesc
gd_s	kern/mm/mmu.h	/^    unsigned gd_s : 1;                \/\/ must be 0 (system)$/;"	m	struct:gatedesc
gd_ss	kern/mm/mmu.h	/^    unsigned gd_ss : 16;            \/\/ segment selector$/;"	m	struct:gatedesc
gd_type	kern/mm/mmu.h	/^    unsigned gd_type : 4;            \/\/ type(STS_{TG,IG32,TG32})$/;"	m	struct:gatedesc
sd_avl	kern/mm/mmu.h	/^    unsigned sd_avl : 1;            \/\/ unused (available for software use)$/;"	m	struct:segdesc
sd_base_15_0	kern/mm/mmu.h	/^    unsigned sd_base_15_0 : 16;        \/\/ low bits of segment base address$/;"	m	struct:segdesc
sd_base_23_16	kern/mm/mmu.h	/^    unsigned sd_base_23_16 : 8;        \/\/ middle bits of segment base address$/;"	m	struct:segdesc
sd_base_31_24	kern/mm/mmu.h	/^    unsigned sd_base_31_24 : 8;        \/\/ high bits of segment base address$/;"	m	struct:segdesc
sd_db	kern/mm/mmu.h	/^    unsigned sd_db : 1;                \/\/ 0 = 16-bit segment, 1 = 32-bit segment$/;"	m	struct:segdesc
sd_dpl	kern/mm/mmu.h	/^    unsigned sd_dpl : 2;            \/\/ descriptor Privilege Level$/;"	m	struct:segdesc
sd_g	kern/mm/mmu.h	/^    unsigned sd_g : 1;                \/\/ granularity: limit scaled by 4K when set$/;"	m	struct:segdesc
sd_lim_15_0	kern/mm/mmu.h	/^    unsigned sd_lim_15_0 : 16;        \/\/ low bits of segment limit$/;"	m	struct:segdesc
sd_lim_19_16	kern/mm/mmu.h	/^    unsigned sd_lim_19_16 : 4;        \/\/ high bits of segment limit$/;"	m	struct:segdesc
sd_p	kern/mm/mmu.h	/^    unsigned sd_p : 1;                \/\/ present$/;"	m	struct:segdesc
sd_rsv1	kern/mm/mmu.h	/^    unsigned sd_rsv1 : 1;            \/\/ reserved$/;"	m	struct:segdesc
sd_s	kern/mm/mmu.h	/^    unsigned sd_s : 1;                \/\/ 0 = system, 1 = application$/;"	m	struct:segdesc
sd_type	kern/mm/mmu.h	/^    unsigned sd_type : 4;            \/\/ segment type (see STS_ constants)$/;"	m	struct:segdesc
segdesc	kern/mm/mmu.h	/^struct segdesc {$/;"	s
taskstate	kern/mm/mmu.h	/^struct taskstate {$/;"	s
ts_cr3	kern/mm/mmu.h	/^    uintptr_t ts_cr3;        \/\/ page directory base$/;"	m	struct:taskstate
ts_cs	kern/mm/mmu.h	/^    uint16_t ts_cs;$/;"	m	struct:taskstate
ts_ds	kern/mm/mmu.h	/^    uint16_t ts_ds;$/;"	m	struct:taskstate
ts_eax	kern/mm/mmu.h	/^    uint32_t ts_eax;        \/\/ more saved state (registers)$/;"	m	struct:taskstate
ts_ebp	kern/mm/mmu.h	/^    uintptr_t ts_ebp;$/;"	m	struct:taskstate
ts_ebx	kern/mm/mmu.h	/^    uint32_t ts_ebx;$/;"	m	struct:taskstate
ts_ecx	kern/mm/mmu.h	/^    uint32_t ts_ecx;$/;"	m	struct:taskstate
ts_edi	kern/mm/mmu.h	/^    uint32_t ts_edi;$/;"	m	struct:taskstate
ts_edx	kern/mm/mmu.h	/^    uint32_t ts_edx;$/;"	m	struct:taskstate
ts_eflags	kern/mm/mmu.h	/^    uint32_t ts_eflags;$/;"	m	struct:taskstate
ts_eip	kern/mm/mmu.h	/^    uintptr_t ts_eip;        \/\/ saved state from last task switch$/;"	m	struct:taskstate
ts_es	kern/mm/mmu.h	/^    uint16_t ts_es;            \/\/ even more saved state (segment selectors)$/;"	m	struct:taskstate
ts_esi	kern/mm/mmu.h	/^    uint32_t ts_esi;$/;"	m	struct:taskstate
ts_esp	kern/mm/mmu.h	/^    uintptr_t ts_esp;$/;"	m	struct:taskstate
ts_esp0	kern/mm/mmu.h	/^    uintptr_t ts_esp0;        \/\/ stack pointers and segment selectors$/;"	m	struct:taskstate
ts_esp1	kern/mm/mmu.h	/^    uintptr_t ts_esp1;$/;"	m	struct:taskstate
ts_esp2	kern/mm/mmu.h	/^    uintptr_t ts_esp2;$/;"	m	struct:taskstate
ts_fs	kern/mm/mmu.h	/^    uint16_t ts_fs;$/;"	m	struct:taskstate
ts_gs	kern/mm/mmu.h	/^    uint16_t ts_gs;$/;"	m	struct:taskstate
ts_iomb	kern/mm/mmu.h	/^    uint16_t ts_iomb;        \/\/ i\/o map base address$/;"	m	struct:taskstate
ts_ldt	kern/mm/mmu.h	/^    uint16_t ts_ldt;$/;"	m	struct:taskstate
ts_link	kern/mm/mmu.h	/^    uint32_t ts_link;        \/\/ old ts selector$/;"	m	struct:taskstate
ts_padding1	kern/mm/mmu.h	/^    uint16_t ts_padding1;$/;"	m	struct:taskstate
ts_padding10	kern/mm/mmu.h	/^    uint16_t ts_padding10;$/;"	m	struct:taskstate
ts_padding2	kern/mm/mmu.h	/^    uint16_t ts_padding2;$/;"	m	struct:taskstate
ts_padding3	kern/mm/mmu.h	/^    uint16_t ts_padding3;$/;"	m	struct:taskstate
ts_padding4	kern/mm/mmu.h	/^    uint16_t ts_padding4;$/;"	m	struct:taskstate
ts_padding5	kern/mm/mmu.h	/^    uint16_t ts_padding5;$/;"	m	struct:taskstate
ts_padding6	kern/mm/mmu.h	/^    uint16_t ts_padding6;$/;"	m	struct:taskstate
ts_padding7	kern/mm/mmu.h	/^    uint16_t ts_padding7;$/;"	m	struct:taskstate
ts_padding8	kern/mm/mmu.h	/^    uint16_t ts_padding8;$/;"	m	struct:taskstate
ts_padding9	kern/mm/mmu.h	/^    uint16_t ts_padding9;$/;"	m	struct:taskstate
ts_ss	kern/mm/mmu.h	/^    uint16_t ts_ss;$/;"	m	struct:taskstate
ts_ss0	kern/mm/mmu.h	/^    uint16_t ts_ss0;        \/\/ after an increase in privilege level$/;"	m	struct:taskstate
ts_ss1	kern/mm/mmu.h	/^    uint16_t ts_ss1;$/;"	m	struct:taskstate
ts_ss2	kern/mm/mmu.h	/^    uint16_t ts_ss2;$/;"	m	struct:taskstate
ts_t	kern/mm/mmu.h	/^    uint16_t ts_t;            \/\/ trap on task switch$/;"	m	struct:taskstate
gdt	kern/mm/pmm.c	/^static struct segdesc gdt[] = {$/;"	v	typeref:struct:segdesc	file:
gdt_init	kern/mm/pmm.c	/^gdt_init(void) {$/;"	f	file:
gdt_pd	kern/mm/pmm.c	/^static struct pseudodesc gdt_pd = {$/;"	v	typeref:struct:pseudodesc	file:
lgdt	kern/mm/pmm.c	/^lgdt(struct pseudodesc *pd) {$/;"	f	file:
pmm_init	kern/mm/pmm.c	/^pmm_init(void) {$/;"	f
stack0	kern/mm/pmm.c	/^uint8_t stack0[1024];$/;"	v
ts	kern/mm/pmm.c	/^static struct taskstate ts = {0};$/;"	v	typeref:struct:taskstate	file:
__KERN_MM_PMM_H__	kern/mm/pmm.h	/^#define __KERN_MM_PMM_H__$/;"	d
IA32flags	kern/trap/trap.c	/^static const char *IA32flags[] = {$/;"	v	file:
TICK_NUM	kern/trap/trap.c	/^#define TICK_NUM /;"	d	file:
idt	kern/trap/trap.c	/^static struct gatedesc idt[256] = {{0}};$/;"	v	typeref:struct:gatedesc	file:
idt_init	kern/trap/trap.c	/^idt_init(void) {$/;"	f
idt_pd	kern/trap/trap.c	/^static struct pseudodesc idt_pd = {$/;"	v	typeref:struct:pseudodesc	file:
print_regs	kern/trap/trap.c	/^print_regs(struct pushregs *regs) {$/;"	f
print_ticks	kern/trap/trap.c	/^static void print_ticks() {$/;"	f	file:
print_trapframe	kern/trap/trap.c	/^print_trapframe(struct trapframe *tf) {$/;"	f
trap	kern/trap/trap.c	/^trap(struct trapframe *tf) {$/;"	f
trap_dispatch	kern/trap/trap.c	/^trap_dispatch(struct trapframe *tf) {$/;"	f	file:
trap_in_kernel	kern/trap/trap.c	/^trap_in_kernel(struct trapframe *tf) {$/;"	f
trapname	kern/trap/trap.c	/^trapname(int trapno) {$/;"	f	file:
IRQ_COM1	kern/trap/trap.h	/^#define IRQ_COM1 /;"	d
IRQ_ERROR	kern/trap/trap.h	/^#define IRQ_ERROR /;"	d
IRQ_IDE1	kern/trap/trap.h	/^#define IRQ_IDE1 /;"	d
IRQ_IDE2	kern/trap/trap.h	/^#define IRQ_IDE2 /;"	d
IRQ_KBD	kern/trap/trap.h	/^#define IRQ_KBD /;"	d
IRQ_OFFSET	kern/trap/trap.h	/^#define IRQ_OFFSET /;"	d
IRQ_SPURIOUS	kern/trap/trap.h	/^#define IRQ_SPURIOUS /;"	d
IRQ_TIMER	kern/trap/trap.h	/^#define IRQ_TIMER /;"	d
T_ALIGN	kern/trap/trap.h	/^#define T_ALIGN /;"	d
T_BOUND	kern/trap/trap.h	/^#define T_BOUND /;"	d
T_BRKPT	kern/trap/trap.h	/^#define T_BRKPT /;"	d
T_DBLFLT	kern/trap/trap.h	/^#define T_DBLFLT /;"	d
T_DEBUG	kern/trap/trap.h	/^#define T_DEBUG /;"	d
T_DEVICE	kern/trap/trap.h	/^#define T_DEVICE /;"	d
T_DIVIDE	kern/trap/trap.h	/^#define T_DIVIDE /;"	d
T_FPERR	kern/trap/trap.h	/^#define T_FPERR /;"	d
T_GPFLT	kern/trap/trap.h	/^#define T_GPFLT /;"	d
T_ILLOP	kern/trap/trap.h	/^#define T_ILLOP /;"	d
T_MCHK	kern/trap/trap.h	/^#define T_MCHK /;"	d
T_NMI	kern/trap/trap.h	/^#define T_NMI /;"	d
T_OFLOW	kern/trap/trap.h	/^#define T_OFLOW /;"	d
T_PGFLT	kern/trap/trap.h	/^#define T_PGFLT /;"	d
T_SEGNP	kern/trap/trap.h	/^#define T_SEGNP /;"	d
T_SIMDERR	kern/trap/trap.h	/^#define T_SIMDERR /;"	d
T_STACK	kern/trap/trap.h	/^#define T_STACK /;"	d
T_SWITCH_TOK	kern/trap/trap.h	/^#define T_SWITCH_TOK /;"	d
T_SWITCH_TOU	kern/trap/trap.h	/^#define T_SWITCH_TOU /;"	d
T_SYSCALL	kern/trap/trap.h	/^#define T_SYSCALL /;"	d
T_TSS	kern/trap/trap.h	/^#define T_TSS /;"	d
__KERN_TRAP_TRAP_H__	kern/trap/trap.h	/^#define __KERN_TRAP_TRAP_H__$/;"	d
pushregs	kern/trap/trap.h	/^struct pushregs {$/;"	s
reg_eax	kern/trap/trap.h	/^    uint32_t reg_eax;$/;"	m	struct:pushregs
reg_ebp	kern/trap/trap.h	/^    uint32_t reg_ebp;$/;"	m	struct:pushregs
reg_ebx	kern/trap/trap.h	/^    uint32_t reg_ebx;$/;"	m	struct:pushregs
reg_ecx	kern/trap/trap.h	/^    uint32_t reg_ecx;$/;"	m	struct:pushregs
reg_edi	kern/trap/trap.h	/^    uint32_t reg_edi;$/;"	m	struct:pushregs
reg_edx	kern/trap/trap.h	/^    uint32_t reg_edx;$/;"	m	struct:pushregs
reg_esi	kern/trap/trap.h	/^    uint32_t reg_esi;$/;"	m	struct:pushregs
reg_oesp	kern/trap/trap.h	/^    uint32_t reg_oesp;            \/* Useless *\/$/;"	m	struct:pushregs
tf_cs	kern/trap/trap.h	/^    uint16_t tf_cs;$/;"	m	struct:trapframe
tf_ds	kern/trap/trap.h	/^    uint16_t tf_ds;$/;"	m	struct:trapframe
tf_eflags	kern/trap/trap.h	/^    uint32_t tf_eflags;$/;"	m	struct:trapframe
tf_eip	kern/trap/trap.h	/^    uintptr_t tf_eip;$/;"	m	struct:trapframe
tf_err	kern/trap/trap.h	/^    uint32_t tf_err;$/;"	m	struct:trapframe
tf_es	kern/trap/trap.h	/^    uint16_t tf_es;$/;"	m	struct:trapframe
tf_esp	kern/trap/trap.h	/^    uintptr_t tf_esp;$/;"	m	struct:trapframe
tf_fs	kern/trap/trap.h	/^    uint16_t tf_fs;$/;"	m	struct:trapframe
tf_gs	kern/trap/trap.h	/^    uint16_t tf_gs;$/;"	m	struct:trapframe
tf_padding0	kern/trap/trap.h	/^    uint16_t tf_padding0;$/;"	m	struct:trapframe
tf_padding1	kern/trap/trap.h	/^    uint16_t tf_padding1;$/;"	m	struct:trapframe
tf_padding2	kern/trap/trap.h	/^    uint16_t tf_padding2;$/;"	m	struct:trapframe
tf_padding3	kern/trap/trap.h	/^    uint16_t tf_padding3;$/;"	m	struct:trapframe
tf_padding4	kern/trap/trap.h	/^    uint16_t tf_padding4;$/;"	m	struct:trapframe
tf_padding5	kern/trap/trap.h	/^    uint16_t tf_padding5;$/;"	m	struct:trapframe
tf_regs	kern/trap/trap.h	/^    struct pushregs tf_regs;$/;"	m	struct:trapframe	typeref:struct:trapframe::pushregs
tf_ss	kern/trap/trap.h	/^    uint16_t tf_ss;$/;"	m	struct:trapframe
tf_trapno	kern/trap/trap.h	/^    uint32_t tf_trapno;$/;"	m	struct:trapframe
trapframe	kern/trap/trap.h	/^struct trapframe {$/;"	s
__alltraps	kern/trap/trapentry.S	/^__alltraps:$/;"	l
__trapret	kern/trap/trapentry.S	/^__trapret:$/;"	l
__vectors	kern/trap/vectors.S	/^__vectors:$/;"	l
vector0	kern/trap/vectors.S	/^vector0:$/;"	l
vector1	kern/trap/vectors.S	/^vector1:$/;"	l
vector10	kern/trap/vectors.S	/^vector10:$/;"	l
vector100	kern/trap/vectors.S	/^vector100:$/;"	l
vector101	kern/trap/vectors.S	/^vector101:$/;"	l
vector102	kern/trap/vectors.S	/^vector102:$/;"	l
vector103	kern/trap/vectors.S	/^vector103:$/;"	l
vector104	kern/trap/vectors.S	/^vector104:$/;"	l
vector105	kern/trap/vectors.S	/^vector105:$/;"	l
vector106	kern/trap/vectors.S	/^vector106:$/;"	l
vector107	kern/trap/vectors.S	/^vector107:$/;"	l
vector108	kern/trap/vectors.S	/^vector108:$/;"	l
vector109	kern/trap/vectors.S	/^vector109:$/;"	l
vector11	kern/trap/vectors.S	/^vector11:$/;"	l
vector110	kern/trap/vectors.S	/^vector110:$/;"	l
vector111	kern/trap/vectors.S	/^vector111:$/;"	l
vector112	kern/trap/vectors.S	/^vector112:$/;"	l
vector113	kern/trap/vectors.S	/^vector113:$/;"	l
vector114	kern/trap/vectors.S	/^vector114:$/;"	l
vector115	kern/trap/vectors.S	/^vector115:$/;"	l
vector116	kern/trap/vectors.S	/^vector116:$/;"	l
vector117	kern/trap/vectors.S	/^vector117:$/;"	l
vector118	kern/trap/vectors.S	/^vector118:$/;"	l
vector119	kern/trap/vectors.S	/^vector119:$/;"	l
vector12	kern/trap/vectors.S	/^vector12:$/;"	l
vector120	kern/trap/vectors.S	/^vector120:$/;"	l
vector121	kern/trap/vectors.S	/^vector121:$/;"	l
vector122	kern/trap/vectors.S	/^vector122:$/;"	l
vector123	kern/trap/vectors.S	/^vector123:$/;"	l
vector124	kern/trap/vectors.S	/^vector124:$/;"	l
vector125	kern/trap/vectors.S	/^vector125:$/;"	l
vector126	kern/trap/vectors.S	/^vector126:$/;"	l
vector127	kern/trap/vectors.S	/^vector127:$/;"	l
vector128	kern/trap/vectors.S	/^vector128:$/;"	l
vector129	kern/trap/vectors.S	/^vector129:$/;"	l
vector13	kern/trap/vectors.S	/^vector13:$/;"	l
vector130	kern/trap/vectors.S	/^vector130:$/;"	l
vector131	kern/trap/vectors.S	/^vector131:$/;"	l
vector132	kern/trap/vectors.S	/^vector132:$/;"	l
vector133	kern/trap/vectors.S	/^vector133:$/;"	l
vector134	kern/trap/vectors.S	/^vector134:$/;"	l
vector135	kern/trap/vectors.S	/^vector135:$/;"	l
vector136	kern/trap/vectors.S	/^vector136:$/;"	l
vector137	kern/trap/vectors.S	/^vector137:$/;"	l
vector138	kern/trap/vectors.S	/^vector138:$/;"	l
vector139	kern/trap/vectors.S	/^vector139:$/;"	l
vector14	kern/trap/vectors.S	/^vector14:$/;"	l
vector140	kern/trap/vectors.S	/^vector140:$/;"	l
vector141	kern/trap/vectors.S	/^vector141:$/;"	l
vector142	kern/trap/vectors.S	/^vector142:$/;"	l
vector143	kern/trap/vectors.S	/^vector143:$/;"	l
vector144	kern/trap/vectors.S	/^vector144:$/;"	l
vector145	kern/trap/vectors.S	/^vector145:$/;"	l
vector146	kern/trap/vectors.S	/^vector146:$/;"	l
vector147	kern/trap/vectors.S	/^vector147:$/;"	l
vector148	kern/trap/vectors.S	/^vector148:$/;"	l
vector149	kern/trap/vectors.S	/^vector149:$/;"	l
vector15	kern/trap/vectors.S	/^vector15:$/;"	l
vector150	kern/trap/vectors.S	/^vector150:$/;"	l
vector151	kern/trap/vectors.S	/^vector151:$/;"	l
vector152	kern/trap/vectors.S	/^vector152:$/;"	l
vector153	kern/trap/vectors.S	/^vector153:$/;"	l
vector154	kern/trap/vectors.S	/^vector154:$/;"	l
vector155	kern/trap/vectors.S	/^vector155:$/;"	l
vector156	kern/trap/vectors.S	/^vector156:$/;"	l
vector157	kern/trap/vectors.S	/^vector157:$/;"	l
vector158	kern/trap/vectors.S	/^vector158:$/;"	l
vector159	kern/trap/vectors.S	/^vector159:$/;"	l
vector16	kern/trap/vectors.S	/^vector16:$/;"	l
vector160	kern/trap/vectors.S	/^vector160:$/;"	l
vector161	kern/trap/vectors.S	/^vector161:$/;"	l
vector162	kern/trap/vectors.S	/^vector162:$/;"	l
vector163	kern/trap/vectors.S	/^vector163:$/;"	l
vector164	kern/trap/vectors.S	/^vector164:$/;"	l
vector165	kern/trap/vectors.S	/^vector165:$/;"	l
vector166	kern/trap/vectors.S	/^vector166:$/;"	l
vector167	kern/trap/vectors.S	/^vector167:$/;"	l
vector168	kern/trap/vectors.S	/^vector168:$/;"	l
vector169	kern/trap/vectors.S	/^vector169:$/;"	l
vector17	kern/trap/vectors.S	/^vector17:$/;"	l
vector170	kern/trap/vectors.S	/^vector170:$/;"	l
vector171	kern/trap/vectors.S	/^vector171:$/;"	l
vector172	kern/trap/vectors.S	/^vector172:$/;"	l
vector173	kern/trap/vectors.S	/^vector173:$/;"	l
vector174	kern/trap/vectors.S	/^vector174:$/;"	l
vector175	kern/trap/vectors.S	/^vector175:$/;"	l
vector176	kern/trap/vectors.S	/^vector176:$/;"	l
vector177	kern/trap/vectors.S	/^vector177:$/;"	l
vector178	kern/trap/vectors.S	/^vector178:$/;"	l
vector179	kern/trap/vectors.S	/^vector179:$/;"	l
vector18	kern/trap/vectors.S	/^vector18:$/;"	l
vector180	kern/trap/vectors.S	/^vector180:$/;"	l
vector181	kern/trap/vectors.S	/^vector181:$/;"	l
vector182	kern/trap/vectors.S	/^vector182:$/;"	l
vector183	kern/trap/vectors.S	/^vector183:$/;"	l
vector184	kern/trap/vectors.S	/^vector184:$/;"	l
vector185	kern/trap/vectors.S	/^vector185:$/;"	l
vector186	kern/trap/vectors.S	/^vector186:$/;"	l
vector187	kern/trap/vectors.S	/^vector187:$/;"	l
vector188	kern/trap/vectors.S	/^vector188:$/;"	l
vector189	kern/trap/vectors.S	/^vector189:$/;"	l
vector19	kern/trap/vectors.S	/^vector19:$/;"	l
vector190	kern/trap/vectors.S	/^vector190:$/;"	l
vector191	kern/trap/vectors.S	/^vector191:$/;"	l
vector192	kern/trap/vectors.S	/^vector192:$/;"	l
vector193	kern/trap/vectors.S	/^vector193:$/;"	l
vector194	kern/trap/vectors.S	/^vector194:$/;"	l
vector195	kern/trap/vectors.S	/^vector195:$/;"	l
vector196	kern/trap/vectors.S	/^vector196:$/;"	l
vector197	kern/trap/vectors.S	/^vector197:$/;"	l
vector198	kern/trap/vectors.S	/^vector198:$/;"	l
vector199	kern/trap/vectors.S	/^vector199:$/;"	l
vector2	kern/trap/vectors.S	/^vector2:$/;"	l
vector20	kern/trap/vectors.S	/^vector20:$/;"	l
vector200	kern/trap/vectors.S	/^vector200:$/;"	l
vector201	kern/trap/vectors.S	/^vector201:$/;"	l
vector202	kern/trap/vectors.S	/^vector202:$/;"	l
vector203	kern/trap/vectors.S	/^vector203:$/;"	l
vector204	kern/trap/vectors.S	/^vector204:$/;"	l
vector205	kern/trap/vectors.S	/^vector205:$/;"	l
vector206	kern/trap/vectors.S	/^vector206:$/;"	l
vector207	kern/trap/vectors.S	/^vector207:$/;"	l
vector208	kern/trap/vectors.S	/^vector208:$/;"	l
vector209	kern/trap/vectors.S	/^vector209:$/;"	l
vector21	kern/trap/vectors.S	/^vector21:$/;"	l
vector210	kern/trap/vectors.S	/^vector210:$/;"	l
vector211	kern/trap/vectors.S	/^vector211:$/;"	l
vector212	kern/trap/vectors.S	/^vector212:$/;"	l
vector213	kern/trap/vectors.S	/^vector213:$/;"	l
vector214	kern/trap/vectors.S	/^vector214:$/;"	l
vector215	kern/trap/vectors.S	/^vector215:$/;"	l
vector216	kern/trap/vectors.S	/^vector216:$/;"	l
vector217	kern/trap/vectors.S	/^vector217:$/;"	l
vector218	kern/trap/vectors.S	/^vector218:$/;"	l
vector219	kern/trap/vectors.S	/^vector219:$/;"	l
vector22	kern/trap/vectors.S	/^vector22:$/;"	l
vector220	kern/trap/vectors.S	/^vector220:$/;"	l
vector221	kern/trap/vectors.S	/^vector221:$/;"	l
vector222	kern/trap/vectors.S	/^vector222:$/;"	l
vector223	kern/trap/vectors.S	/^vector223:$/;"	l
vector224	kern/trap/vectors.S	/^vector224:$/;"	l
vector225	kern/trap/vectors.S	/^vector225:$/;"	l
vector226	kern/trap/vectors.S	/^vector226:$/;"	l
vector227	kern/trap/vectors.S	/^vector227:$/;"	l
vector228	kern/trap/vectors.S	/^vector228:$/;"	l
vector229	kern/trap/vectors.S	/^vector229:$/;"	l
vector23	kern/trap/vectors.S	/^vector23:$/;"	l
vector230	kern/trap/vectors.S	/^vector230:$/;"	l
vector231	kern/trap/vectors.S	/^vector231:$/;"	l
vector232	kern/trap/vectors.S	/^vector232:$/;"	l
vector233	kern/trap/vectors.S	/^vector233:$/;"	l
vector234	kern/trap/vectors.S	/^vector234:$/;"	l
vector235	kern/trap/vectors.S	/^vector235:$/;"	l
vector236	kern/trap/vectors.S	/^vector236:$/;"	l
vector237	kern/trap/vectors.S	/^vector237:$/;"	l
vector238	kern/trap/vectors.S	/^vector238:$/;"	l
vector239	kern/trap/vectors.S	/^vector239:$/;"	l
vector24	kern/trap/vectors.S	/^vector24:$/;"	l
vector240	kern/trap/vectors.S	/^vector240:$/;"	l
vector241	kern/trap/vectors.S	/^vector241:$/;"	l
vector242	kern/trap/vectors.S	/^vector242:$/;"	l
vector243	kern/trap/vectors.S	/^vector243:$/;"	l
vector244	kern/trap/vectors.S	/^vector244:$/;"	l
vector245	kern/trap/vectors.S	/^vector245:$/;"	l
vector246	kern/trap/vectors.S	/^vector246:$/;"	l
vector247	kern/trap/vectors.S	/^vector247:$/;"	l
vector248	kern/trap/vectors.S	/^vector248:$/;"	l
vector249	kern/trap/vectors.S	/^vector249:$/;"	l
vector25	kern/trap/vectors.S	/^vector25:$/;"	l
vector250	kern/trap/vectors.S	/^vector250:$/;"	l
vector251	kern/trap/vectors.S	/^vector251:$/;"	l
vector252	kern/trap/vectors.S	/^vector252:$/;"	l
vector253	kern/trap/vectors.S	/^vector253:$/;"	l
vector254	kern/trap/vectors.S	/^vector254:$/;"	l
vector255	kern/trap/vectors.S	/^vector255:$/;"	l
vector26	kern/trap/vectors.S	/^vector26:$/;"	l
vector27	kern/trap/vectors.S	/^vector27:$/;"	l
vector28	kern/trap/vectors.S	/^vector28:$/;"	l
vector29	kern/trap/vectors.S	/^vector29:$/;"	l
vector3	kern/trap/vectors.S	/^vector3:$/;"	l
vector30	kern/trap/vectors.S	/^vector30:$/;"	l
vector31	kern/trap/vectors.S	/^vector31:$/;"	l
vector32	kern/trap/vectors.S	/^vector32:$/;"	l
vector33	kern/trap/vectors.S	/^vector33:$/;"	l
vector34	kern/trap/vectors.S	/^vector34:$/;"	l
vector35	kern/trap/vectors.S	/^vector35:$/;"	l
vector36	kern/trap/vectors.S	/^vector36:$/;"	l
vector37	kern/trap/vectors.S	/^vector37:$/;"	l
vector38	kern/trap/vectors.S	/^vector38:$/;"	l
vector39	kern/trap/vectors.S	/^vector39:$/;"	l
vector4	kern/trap/vectors.S	/^vector4:$/;"	l
vector40	kern/trap/vectors.S	/^vector40:$/;"	l
vector41	kern/trap/vectors.S	/^vector41:$/;"	l
vector42	kern/trap/vectors.S	/^vector42:$/;"	l
vector43	kern/trap/vectors.S	/^vector43:$/;"	l
vector44	kern/trap/vectors.S	/^vector44:$/;"	l
vector45	kern/trap/vectors.S	/^vector45:$/;"	l
vector46	kern/trap/vectors.S	/^vector46:$/;"	l
vector47	kern/trap/vectors.S	/^vector47:$/;"	l
vector48	kern/trap/vectors.S	/^vector48:$/;"	l
vector49	kern/trap/vectors.S	/^vector49:$/;"	l
vector5	kern/trap/vectors.S	/^vector5:$/;"	l
vector50	kern/trap/vectors.S	/^vector50:$/;"	l
vector51	kern/trap/vectors.S	/^vector51:$/;"	l
vector52	kern/trap/vectors.S	/^vector52:$/;"	l
vector53	kern/trap/vectors.S	/^vector53:$/;"	l
vector54	kern/trap/vectors.S	/^vector54:$/;"	l
vector55	kern/trap/vectors.S	/^vector55:$/;"	l
vector56	kern/trap/vectors.S	/^vector56:$/;"	l
vector57	kern/trap/vectors.S	/^vector57:$/;"	l
vector58	kern/trap/vectors.S	/^vector58:$/;"	l
vector59	kern/trap/vectors.S	/^vector59:$/;"	l
vector6	kern/trap/vectors.S	/^vector6:$/;"	l
vector60	kern/trap/vectors.S	/^vector60:$/;"	l
vector61	kern/trap/vectors.S	/^vector61:$/;"	l
vector62	kern/trap/vectors.S	/^vector62:$/;"	l
vector63	kern/trap/vectors.S	/^vector63:$/;"	l
vector64	kern/trap/vectors.S	/^vector64:$/;"	l
vector65	kern/trap/vectors.S	/^vector65:$/;"	l
vector66	kern/trap/vectors.S	/^vector66:$/;"	l
vector67	kern/trap/vectors.S	/^vector67:$/;"	l
vector68	kern/trap/vectors.S	/^vector68:$/;"	l
vector69	kern/trap/vectors.S	/^vector69:$/;"	l
vector7	kern/trap/vectors.S	/^vector7:$/;"	l
vector70	kern/trap/vectors.S	/^vector70:$/;"	l
vector71	kern/trap/vectors.S	/^vector71:$/;"	l
vector72	kern/trap/vectors.S	/^vector72:$/;"	l
vector73	kern/trap/vectors.S	/^vector73:$/;"	l
vector74	kern/trap/vectors.S	/^vector74:$/;"	l
vector75	kern/trap/vectors.S	/^vector75:$/;"	l
vector76	kern/trap/vectors.S	/^vector76:$/;"	l
vector77	kern/trap/vectors.S	/^vector77:$/;"	l
vector78	kern/trap/vectors.S	/^vector78:$/;"	l
vector79	kern/trap/vectors.S	/^vector79:$/;"	l
vector8	kern/trap/vectors.S	/^vector8:$/;"	l
vector80	kern/trap/vectors.S	/^vector80:$/;"	l
vector81	kern/trap/vectors.S	/^vector81:$/;"	l
vector82	kern/trap/vectors.S	/^vector82:$/;"	l
vector83	kern/trap/vectors.S	/^vector83:$/;"	l
vector84	kern/trap/vectors.S	/^vector84:$/;"	l
vector85	kern/trap/vectors.S	/^vector85:$/;"	l
vector86	kern/trap/vectors.S	/^vector86:$/;"	l
vector87	kern/trap/vectors.S	/^vector87:$/;"	l
vector88	kern/trap/vectors.S	/^vector88:$/;"	l
vector89	kern/trap/vectors.S	/^vector89:$/;"	l
vector9	kern/trap/vectors.S	/^vector9:$/;"	l
vector90	kern/trap/vectors.S	/^vector90:$/;"	l
vector91	kern/trap/vectors.S	/^vector91:$/;"	l
vector92	kern/trap/vectors.S	/^vector92:$/;"	l
vector93	kern/trap/vectors.S	/^vector93:$/;"	l
vector94	kern/trap/vectors.S	/^vector94:$/;"	l
vector95	kern/trap/vectors.S	/^vector95:$/;"	l
vector96	kern/trap/vectors.S	/^vector96:$/;"	l
vector97	kern/trap/vectors.S	/^vector97:$/;"	l
vector98	kern/trap/vectors.S	/^vector98:$/;"	l
vector99	kern/trap/vectors.S	/^vector99:$/;"	l
NULL	libs/defs.h	/^#define NULL /;"	d
ROUNDDOWN	libs/defs.h	/^#define ROUNDDOWN(/;"	d
ROUNDUP	libs/defs.h	/^#define ROUNDUP(/;"	d
__LIBS_DEFS_H__	libs/defs.h	/^#define __LIBS_DEFS_H__$/;"	d
__always_inline	libs/defs.h	/^#define __always_inline /;"	d
__noinline	libs/defs.h	/^#define __noinline /;"	d
__noreturn	libs/defs.h	/^#define __noreturn /;"	d
bool	libs/defs.h	/^typedef int bool;$/;"	t
int16_t	libs/defs.h	/^typedef short int16_t;$/;"	t
int32_t	libs/defs.h	/^typedef int int32_t;$/;"	t
int64_t	libs/defs.h	/^typedef long long int64_t;$/;"	t
int8_t	libs/defs.h	/^typedef char int8_t;$/;"	t
intptr_t	libs/defs.h	/^typedef int32_t intptr_t;$/;"	t
offsetof	libs/defs.h	/^#define offsetof(/;"	d
ppn_t	libs/defs.h	/^typedef size_t ppn_t;$/;"	t
size_t	libs/defs.h	/^typedef uintptr_t size_t;$/;"	t
to_struct	libs/defs.h	/^#define to_struct(/;"	d
uint16_t	libs/defs.h	/^typedef unsigned short uint16_t;$/;"	t
uint32_t	libs/defs.h	/^typedef unsigned int uint32_t;$/;"	t
uint64_t	libs/defs.h	/^typedef unsigned long long uint64_t;$/;"	t
uint8_t	libs/defs.h	/^typedef unsigned char uint8_t;$/;"	t
uintptr_t	libs/defs.h	/^typedef uint32_t uintptr_t;$/;"	t
ELF_MAGIC	libs/elf.h	/^#define ELF_MAGIC /;"	d
__LIBS_ELF_H__	libs/elf.h	/^#define __LIBS_ELF_H__$/;"	d
e_ehsize	libs/elf.h	/^    uint16_t e_ehsize;    \/\/ size of this elf header$/;"	m	struct:elfhdr
e_elf	libs/elf.h	/^    uint8_t e_elf[12];$/;"	m	struct:elfhdr
e_entry	libs/elf.h	/^    uint32_t e_entry;     \/\/ entry point if executable$/;"	m	struct:elfhdr
e_flags	libs/elf.h	/^    uint32_t e_flags;     \/\/ architecture-specific flags, usually 0$/;"	m	struct:elfhdr
e_machine	libs/elf.h	/^    uint16_t e_machine;   \/\/ 3=x86, 4=68K, etc.$/;"	m	struct:elfhdr
e_magic	libs/elf.h	/^    uint32_t e_magic;     \/\/ must equal ELF_MAGIC$/;"	m	struct:elfhdr
e_phentsize	libs/elf.h	/^    uint16_t e_phentsize; \/\/ size of an entry in program header$/;"	m	struct:elfhdr
e_phnum	libs/elf.h	/^    uint16_t e_phnum;     \/\/ number of entries in program header or 0$/;"	m	struct:elfhdr
e_phoff	libs/elf.h	/^    uint32_t e_phoff;     \/\/ file position of program header or 0$/;"	m	struct:elfhdr
e_shentsize	libs/elf.h	/^    uint16_t e_shentsize; \/\/ size of an entry in section header$/;"	m	struct:elfhdr
e_shnum	libs/elf.h	/^    uint16_t e_shnum;     \/\/ number of entries in section header or 0$/;"	m	struct:elfhdr
e_shoff	libs/elf.h	/^    uint32_t e_shoff;     \/\/ file position of section header or 0$/;"	m	struct:elfhdr
e_shstrndx	libs/elf.h	/^    uint16_t e_shstrndx;  \/\/ section number that contains section name strings$/;"	m	struct:elfhdr
e_type	libs/elf.h	/^    uint16_t e_type;      \/\/ 1=relocatable, 2=executable, 3=shared object, 4=core image$/;"	m	struct:elfhdr
e_version	libs/elf.h	/^    uint32_t e_version;   \/\/ file version, always 1$/;"	m	struct:elfhdr
elfhdr	libs/elf.h	/^struct elfhdr {$/;"	s
p_align	libs/elf.h	/^    uint32_t p_align;  \/\/ required alignment, invariably hardware page size$/;"	m	struct:proghdr
p_filesz	libs/elf.h	/^    uint32_t p_filesz; \/\/ size of segment in file$/;"	m	struct:proghdr
p_flags	libs/elf.h	/^    uint32_t p_flags;  \/\/ read\/write\/execute bits$/;"	m	struct:proghdr
p_memsz	libs/elf.h	/^    uint32_t p_memsz;  \/\/ size of segment in memory (bigger if contains bss）$/;"	m	struct:proghdr
p_offset	libs/elf.h	/^    uint32_t p_offset; \/\/ file offset of segment$/;"	m	struct:proghdr
p_pa	libs/elf.h	/^    uint32_t p_pa;     \/\/ physical address, not used$/;"	m	struct:proghdr
p_type	libs/elf.h	/^    uint32_t p_type;   \/\/ loadable code or data, dynamic linking info,etc.$/;"	m	struct:proghdr
p_va	libs/elf.h	/^    uint32_t p_va;     \/\/ virtual address to map segment$/;"	m	struct:proghdr
proghdr	libs/elf.h	/^struct proghdr {$/;"	s
E_BAD_PROC	libs/error.h	/^#define E_BAD_PROC /;"	d
E_FAULT	libs/error.h	/^#define E_FAULT /;"	d
E_INVAL	libs/error.h	/^#define E_INVAL /;"	d
E_NO_FREE_PROC	libs/error.h	/^#define E_NO_FREE_PROC /;"	d
E_NO_MEM	libs/error.h	/^#define E_NO_MEM /;"	d
E_UNSPECIFIED	libs/error.h	/^#define E_UNSPECIFIED /;"	d
MAXERROR	libs/error.h	/^#define MAXERROR /;"	d
__LIBS_ERROR_H__	libs/error.h	/^#define __LIBS_ERROR_H__$/;"	d
buf	libs/printfmt.c	/^    char *buf;            \/\/ address pointer points to the first unused memory$/;"	m	struct:sprintbuf	file:
cnt	libs/printfmt.c	/^    int cnt;            \/\/ the number of characters that have been placed in this buffer$/;"	m	struct:sprintbuf	file:
ebuf	libs/printfmt.c	/^    char *ebuf;            \/\/ points the end of the buffer$/;"	m	struct:sprintbuf	file:
error_string	libs/printfmt.c	/^static const char * const error_string[MAXERROR + 1] = {$/;"	v	file:
getint	libs/printfmt.c	/^getint(va_list *ap, int lflag) {$/;"	f	file:
getuint	libs/printfmt.c	/^getuint(va_list *ap, int lflag) {$/;"	f	file:
printfmt	libs/printfmt.c	/^printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...) {$/;"	f
printnum	libs/printfmt.c	/^printnum(void (*putch)(int, void*), void *putdat,$/;"	f	file:
snprintf	libs/printfmt.c	/^snprintf(char *str, size_t size, const char *fmt, ...) {$/;"	f
sprintbuf	libs/printfmt.c	/^struct sprintbuf {$/;"	s	file:
sprintputch	libs/printfmt.c	/^sprintputch(int ch, struct sprintbuf *b) {$/;"	f	file:
vprintfmt	libs/printfmt.c	/^vprintfmt(void (*putch)(int, void*), void *putdat, const char *fmt, va_list ap) {$/;"	f
vsnprintf	libs/printfmt.c	/^vsnprintf(char *str, size_t size, const char *fmt, va_list ap) {$/;"	f
__LIBS_STDARG_H__	libs/stdarg.h	/^#define __LIBS_STDARG_H__$/;"	d
va_arg	libs/stdarg.h	/^#define va_arg(/;"	d
va_end	libs/stdarg.h	/^#define va_end(/;"	d
va_list	libs/stdarg.h	/^typedef __builtin_va_list va_list;$/;"	t
va_start	libs/stdarg.h	/^#define va_start(/;"	d
__LIBS_STDIO_H__	libs/stdio.h	/^#define __LIBS_STDIO_H__$/;"	d
memcmp	libs/string.c	/^memcmp(const void *v1, const void *v2, size_t n) {$/;"	f
memcpy	libs/string.c	/^memcpy(void *dst, const void *src, size_t n) {$/;"	f
memmove	libs/string.c	/^memmove(void *dst, const void *src, size_t n) {$/;"	f
memset	libs/string.c	/^memset(void *s, char c, size_t n) {$/;"	f
strchr	libs/string.c	/^strchr(const char *s, char c) {$/;"	f
strcmp	libs/string.c	/^strcmp(const char *s1, const char *s2) {$/;"	f
strcpy	libs/string.c	/^strcpy(char *dst, const char *src) {$/;"	f
strfind	libs/string.c	/^strfind(const char *s, char c) {$/;"	f
strlen	libs/string.c	/^strlen(const char *s) {$/;"	f
strncmp	libs/string.c	/^strncmp(const char *s1, const char *s2, size_t n) {$/;"	f
strncpy	libs/string.c	/^strncpy(char *dst, const char *src, size_t len) {$/;"	f
strnlen	libs/string.c	/^strnlen(const char *s, size_t len) {$/;"	f
strtol	libs/string.c	/^strtol(const char *s, char **endptr, int base) {$/;"	f
__LIBS_STRING_H__	libs/string.h	/^#define __LIBS_STRING_H__$/;"	d
__HAVE_ARCH_MEMCPY	libs/x86.h	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMMOVE	libs/x86.h	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMSET	libs/x86.h	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_STRCMP	libs/x86.h	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCPY	libs/x86.h	/^#define __HAVE_ARCH_STRCPY$/;"	d
__LIBS_X86_H__	libs/x86.h	/^#define __LIBS_X86_H__$/;"	d
__memcpy	libs/x86.h	/^__memcpy(void *dst, const void *src, size_t n) {$/;"	f
__memmove	libs/x86.h	/^__memmove(void *dst, const void *src, size_t n) {$/;"	f
__memset	libs/x86.h	/^__memset(void *s, char c, size_t n) {$/;"	f
__strcmp	libs/x86.h	/^__strcmp(const char *s1, const char *s2) {$/;"	f
__strcpy	libs/x86.h	/^__strcpy(char *dst, const char *src) {$/;"	f
cli	libs/x86.h	/^cli(void) {$/;"	f
do_div	libs/x86.h	/^#define do_div(/;"	d
inb	libs/x86.h	/^inb(uint16_t port) {$/;"	f
insl	libs/x86.h	/^insl(uint32_t port, void *addr, int cnt) {$/;"	f
lidt	libs/x86.h	/^lidt(struct pseudodesc *pd) {$/;"	f
ltr	libs/x86.h	/^ltr(uint16_t sel) {$/;"	f
outb	libs/x86.h	/^outb(uint16_t port, uint8_t data) {$/;"	f
outw	libs/x86.h	/^outw(uint16_t port, uint16_t data) {$/;"	f
pd_base	libs/x86.h	/^    uint32_t pd_base;        \/\/ Base address$/;"	m	struct:pseudodesc
pd_lim	libs/x86.h	/^    uint16_t pd_lim;        \/\/ Limit$/;"	m	struct:pseudodesc
pseudodesc	libs/x86.h	/^struct pseudodesc {$/;"	s
read_ebp	libs/x86.h	/^read_ebp(void) {$/;"	f
sti	libs/x86.h	/^sti(void) {$/;"	f
Disassembly	obj/bootblock.asm	/^Disassembly of section .text:$/;"	l
ELFHDR	obj/bootblock.asm	/^#define ELFHDR          ((struct elfhdr *)0x10000)      \/\/ scratch space$/;"	d
eph	obj/bootblock.asm	/^    eph = ph + ELFHDR->e_phnum;$/;"	d
ph	obj/bootblock.asm	/^    ph = (struct proghdr *)((uintptr_t)ELFHDR + ELFHDR->e_phoff);$/;"	d
protcseg	obj/bootblock.asm	/^protcseg:$/;"	l
spin	obj/bootblock.asm	/^spin:$/;"	l
start	obj/bootblock.asm	/^start:$/;"	l
static	obj/bootblock.asm	/^static inline uint8_t$/;"	l
static	obj/bootblock.asm	/^static inline void ltr(uint16_t sel) __attribute__((always_inline));$/;"	l
static	obj/bootblock.asm	/^static inline void$/;"	l
static	obj/bootblock.asm	/^static void$/;"	l
void	obj/bootblock.asm	/^void$/;"	l
Disassembly	obj/kernel.asm	/^Disassembly of section .text:$/;"	l
MAXARGS	obj/kernel.asm	/^#define MAXARGS         16$/;"	d
TICK_NUM	obj/kernel.asm	/^#define TICK_NUM 100$/;"	d
WHITESPACE	obj/kernel.asm	/^#define WHITESPACE      " \\t\\n\\r"$/;"	d
__HAVE_ARCH_MEMCPY	obj/kernel.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMMOVE	obj/kernel.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMSET	obj/kernel.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_STRCMP	obj/kernel.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCPY	obj/kernel.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__alltraps	obj/kernel.asm	/^__alltraps:$/;"	l
__trapret	obj/kernel.asm	/^__trapret:$/;"	l
addr_6845	obj/kernel.asm	/^        addr_6845 = CGA_BASE;                               \/\/ 设置为彩显控制的IO地址，CGA_BASE: 0x3D4 $/;"	d
addr_6845	obj/kernel.asm	/^        addr_6845 = MONO_BASE;                           \/\/设置为单显控制的IO地址，MONO_BASE: 0x3B4$/;"	d
altflag	obj/kernel.asm	/^            altflag = 1;$/;"	d
any_matches	obj/kernel.asm	/^        any_matches = 1;$/;"	d
base	obj/kernel.asm	/^            base = 10;$/;"	d
base	obj/kernel.asm	/^            base = 16;$/;"	d
base	obj/kernel.asm	/^            base = 8;$/;"	d
base	obj/kernel.asm	/^        base = 10;$/;"	d
bool	obj/kernel.asm	/^bool$/;"	l
c	obj/kernel.asm	/^        c = '\\b';$/;"	d
c	obj/kernel.asm	/^        c = cons.buf[cons.rpos ++];$/;"	d
c	obj/kernel.asm	/^        c = cons_getc();$/;"	d
c	obj/kernel.asm	/^        c = getchar();$/;"	d
c	obj/kernel.asm	/^    c = charcode[shift & (CTL | SHIFT)][data];$/;"	d
ch	obj/kernel.asm	/^                ch = *fmt;$/;"	d
char	obj/kernel.asm	/^char *$/;"	l
cnt	obj/kernel.asm	/^    cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/kernel.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
const	obj/kernel.asm	/^    const struct stab *stabs, *stab_end;$/;"	t
cp	obj/kernel.asm	/^        cp = (uint16_t*)MONO_BUF;                         \/\/设置为单显的显存基址 MONO_BUF： 0xB0000$/;"	d
crt_buf	obj/kernel.asm	/^    crt_buf = (uint16_t*) cp;                                  \/\/crt_buf是CGA显存起始地址$/;"	d
crt_pos	obj/kernel.asm	/^    crt_pos = pos;                                                  \/\/crt_pos是CGA当前光标位置$/;"	d
data	obj/kernel.asm	/^        data = (shift & E0ESC ? data : data & 0x7F);$/;"	d
data	obj/kernel.asm	/^    data = inb(KBDATAP);$/;"	d
default	obj/kernel.asm	/^        default:$/;"	l
default	obj/kernel.asm	/^    default:$/;"	l
did_init	obj/kernel.asm	/^    did_init = 1;$/;"	d
dig	obj/kernel.asm	/^            dig = *s - '0';$/;"	d
dig	obj/kernel.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/kernel.asm	/^            dig = *s - 'a' + 10;$/;"	d
err	obj/kernel.asm	/^                err = -err;$/;"	d
err	obj/kernel.asm	/^            err = va_arg(ap, int);$/;"	d
int	obj/kernel.asm	/^int kern_init(void) __attribute__((noreturn));$/;"	l
int	obj/kernel.asm	/^int$/;"	l
irq_mask	obj/kernel.asm	/^    irq_mask = mask;$/;"	d
is_panic	obj/kernel.asm	/^    is_panic = 1;$/;"	d
l	obj/kernel.asm	/^            l = m;$/;"	d
l	obj/kernel.asm	/^            l = true_m + 1;$/;"	d
l	obj/kernel.asm	/^        l = *region_right;$/;"	d
lflag	obj/kernel.asm	/^        lflag = altflag = 0;$/;"	d
lline	obj/kernel.asm	/^        lline = lfile;$/;"	d
lline	obj/kernel.asm	/^        lline = lfun;$/;"	d
long	obj/kernel.asm	/^long$/;"	l
num	obj/kernel.asm	/^                num = -(long long)num;$/;"	d
num	obj/kernel.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/kernel.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/kernel.asm	/^            num = getuint(&ap, lflag);$/;"	d
number	obj/kernel.asm	/^        number:$/;"	l
p	obj/kernel.asm	/^                p = "(null)";$/;"	d
padc	obj/kernel.asm	/^            padc = '-';$/;"	d
padc	obj/kernel.asm	/^            padc = '0';$/;"	d
panic_dead	obj/kernel.asm	/^panic_dead:$/;"	l
pos	obj/kernel.asm	/^    pos = inb(addr_6845 + 1) << 8;                       \/\/读出了光标位置(高位)$/;"	d
precision	obj/kernel.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/kernel.asm	/^            precision = va_arg(ap, int);$/;"	d
process_precision	obj/kernel.asm	/^        process_precision:$/;"	l
r	obj/kernel.asm	/^            r = m - 1;$/;"	d
reswitch	obj/kernel.asm	/^    reswitch:$/;"	l
rline	obj/kernel.asm	/^        rline = rfile;$/;"	d
rline	obj/kernel.asm	/^        rline = rfun;$/;"	d
serial_exists	obj/kernel.asm	/^    serial_exists = (inb(COM1 + COM_LSR) != 0xFF);$/;"	d
size_t	obj/kernel.asm	/^size_t$/;"	l
stab_end	obj/kernel.asm	/^    stab_end = __STAB_END__;$/;"	d
stabs	obj/kernel.asm	/^    stabs = __STAB_BEGIN__;$/;"	d
stabstr	obj/kernel.asm	/^    stabstr = __STABSTR_BEGIN__;$/;"	d
stabstr_end	obj/kernel.asm	/^    stabstr_end = __STABSTR_END__;$/;"	d
static	obj/kernel.asm	/^static __noinline uint32_t$/;"	l
static	obj/kernel.asm	/^static bool did_init = 0;$/;"	l
static	obj/kernel.asm	/^static bool serial_exists = 0;$/;"	l
static	obj/kernel.asm	/^static const char *$/;"	l
static	obj/kernel.asm	/^static inline char *$/;"	l
static	obj/kernel.asm	/^static inline int$/;"	l
static	obj/kernel.asm	/^static inline uint32_t$/;"	l
static	obj/kernel.asm	/^static inline uint8_t$/;"	l
static	obj/kernel.asm	/^static inline void *$/;"	l
static	obj/kernel.asm	/^static inline void ltr(uint16_t sel) __attribute__((always_inline));$/;"	l
static	obj/kernel.asm	/^static inline void$/;"	l
static	obj/kernel.asm	/^static int$/;"	l
static	obj/kernel.asm	/^static long long$/;"	l
static	obj/kernel.asm	/^static uint16_t irq_mask = 0xFFFF & ~(1 << IRQ_SLAVE);$/;"	l
static	obj/kernel.asm	/^static unsigned long long$/;"	l
static	obj/kernel.asm	/^static void lab1_switch_test(void);$/;"	l
static	obj/kernel.asm	/^static void print_ticks() {$/;"	l
static	obj/kernel.asm	/^static void$/;"	l
ticks	obj/kernel.asm	/^    ticks = 0;$/;"	d
uint8_t	obj/kernel.asm	/^uint8_t stack0[1024];$/;"	l
vector0	obj/kernel.asm	/^vector0:$/;"	l
vector1	obj/kernel.asm	/^vector1:$/;"	l
vector10	obj/kernel.asm	/^vector10:$/;"	l
vector100	obj/kernel.asm	/^vector100:$/;"	l
vector101	obj/kernel.asm	/^vector101:$/;"	l
vector102	obj/kernel.asm	/^vector102:$/;"	l
vector103	obj/kernel.asm	/^vector103:$/;"	l
vector104	obj/kernel.asm	/^vector104:$/;"	l
vector105	obj/kernel.asm	/^vector105:$/;"	l
vector106	obj/kernel.asm	/^vector106:$/;"	l
vector107	obj/kernel.asm	/^vector107:$/;"	l
vector108	obj/kernel.asm	/^vector108:$/;"	l
vector109	obj/kernel.asm	/^vector109:$/;"	l
vector11	obj/kernel.asm	/^vector11:$/;"	l
vector110	obj/kernel.asm	/^vector110:$/;"	l
vector111	obj/kernel.asm	/^vector111:$/;"	l
vector112	obj/kernel.asm	/^vector112:$/;"	l
vector113	obj/kernel.asm	/^vector113:$/;"	l
vector114	obj/kernel.asm	/^vector114:$/;"	l
vector115	obj/kernel.asm	/^vector115:$/;"	l
vector116	obj/kernel.asm	/^vector116:$/;"	l
vector117	obj/kernel.asm	/^vector117:$/;"	l
vector118	obj/kernel.asm	/^vector118:$/;"	l
vector119	obj/kernel.asm	/^vector119:$/;"	l
vector12	obj/kernel.asm	/^vector12:$/;"	l
vector120	obj/kernel.asm	/^vector120:$/;"	l
vector121	obj/kernel.asm	/^vector121:$/;"	l
vector122	obj/kernel.asm	/^vector122:$/;"	l
vector123	obj/kernel.asm	/^vector123:$/;"	l
vector124	obj/kernel.asm	/^vector124:$/;"	l
vector125	obj/kernel.asm	/^vector125:$/;"	l
vector126	obj/kernel.asm	/^vector126:$/;"	l
vector127	obj/kernel.asm	/^vector127:$/;"	l
vector128	obj/kernel.asm	/^vector128:$/;"	l
vector129	obj/kernel.asm	/^vector129:$/;"	l
vector13	obj/kernel.asm	/^vector13:$/;"	l
vector130	obj/kernel.asm	/^vector130:$/;"	l
vector131	obj/kernel.asm	/^vector131:$/;"	l
vector132	obj/kernel.asm	/^vector132:$/;"	l
vector133	obj/kernel.asm	/^vector133:$/;"	l
vector134	obj/kernel.asm	/^vector134:$/;"	l
vector135	obj/kernel.asm	/^vector135:$/;"	l
vector136	obj/kernel.asm	/^vector136:$/;"	l
vector137	obj/kernel.asm	/^vector137:$/;"	l
vector138	obj/kernel.asm	/^vector138:$/;"	l
vector139	obj/kernel.asm	/^vector139:$/;"	l
vector14	obj/kernel.asm	/^vector14:$/;"	l
vector140	obj/kernel.asm	/^vector140:$/;"	l
vector141	obj/kernel.asm	/^vector141:$/;"	l
vector142	obj/kernel.asm	/^vector142:$/;"	l
vector143	obj/kernel.asm	/^vector143:$/;"	l
vector144	obj/kernel.asm	/^vector144:$/;"	l
vector145	obj/kernel.asm	/^vector145:$/;"	l
vector146	obj/kernel.asm	/^vector146:$/;"	l
vector147	obj/kernel.asm	/^vector147:$/;"	l
vector148	obj/kernel.asm	/^vector148:$/;"	l
vector149	obj/kernel.asm	/^vector149:$/;"	l
vector15	obj/kernel.asm	/^vector15:$/;"	l
vector150	obj/kernel.asm	/^vector150:$/;"	l
vector151	obj/kernel.asm	/^vector151:$/;"	l
vector152	obj/kernel.asm	/^vector152:$/;"	l
vector153	obj/kernel.asm	/^vector153:$/;"	l
vector154	obj/kernel.asm	/^vector154:$/;"	l
vector155	obj/kernel.asm	/^vector155:$/;"	l
vector156	obj/kernel.asm	/^vector156:$/;"	l
vector157	obj/kernel.asm	/^vector157:$/;"	l
vector158	obj/kernel.asm	/^vector158:$/;"	l
vector159	obj/kernel.asm	/^vector159:$/;"	l
vector16	obj/kernel.asm	/^vector16:$/;"	l
vector160	obj/kernel.asm	/^vector160:$/;"	l
vector161	obj/kernel.asm	/^vector161:$/;"	l
vector162	obj/kernel.asm	/^vector162:$/;"	l
vector163	obj/kernel.asm	/^vector163:$/;"	l
vector164	obj/kernel.asm	/^vector164:$/;"	l
vector165	obj/kernel.asm	/^vector165:$/;"	l
vector166	obj/kernel.asm	/^vector166:$/;"	l
vector167	obj/kernel.asm	/^vector167:$/;"	l
vector168	obj/kernel.asm	/^vector168:$/;"	l
vector169	obj/kernel.asm	/^vector169:$/;"	l
vector17	obj/kernel.asm	/^vector17:$/;"	l
vector170	obj/kernel.asm	/^vector170:$/;"	l
vector171	obj/kernel.asm	/^vector171:$/;"	l
vector172	obj/kernel.asm	/^vector172:$/;"	l
vector173	obj/kernel.asm	/^vector173:$/;"	l
vector174	obj/kernel.asm	/^vector174:$/;"	l
vector175	obj/kernel.asm	/^vector175:$/;"	l
vector176	obj/kernel.asm	/^vector176:$/;"	l
vector177	obj/kernel.asm	/^vector177:$/;"	l
vector178	obj/kernel.asm	/^vector178:$/;"	l
vector179	obj/kernel.asm	/^vector179:$/;"	l
vector18	obj/kernel.asm	/^vector18:$/;"	l
vector180	obj/kernel.asm	/^vector180:$/;"	l
vector181	obj/kernel.asm	/^vector181:$/;"	l
vector182	obj/kernel.asm	/^vector182:$/;"	l
vector183	obj/kernel.asm	/^vector183:$/;"	l
vector184	obj/kernel.asm	/^vector184:$/;"	l
vector185	obj/kernel.asm	/^vector185:$/;"	l
vector186	obj/kernel.asm	/^vector186:$/;"	l
vector187	obj/kernel.asm	/^vector187:$/;"	l
vector188	obj/kernel.asm	/^vector188:$/;"	l
vector189	obj/kernel.asm	/^vector189:$/;"	l
vector19	obj/kernel.asm	/^vector19:$/;"	l
vector190	obj/kernel.asm	/^vector190:$/;"	l
vector191	obj/kernel.asm	/^vector191:$/;"	l
vector192	obj/kernel.asm	/^vector192:$/;"	l
vector193	obj/kernel.asm	/^vector193:$/;"	l
vector194	obj/kernel.asm	/^vector194:$/;"	l
vector195	obj/kernel.asm	/^vector195:$/;"	l
vector196	obj/kernel.asm	/^vector196:$/;"	l
vector197	obj/kernel.asm	/^vector197:$/;"	l
vector198	obj/kernel.asm	/^vector198:$/;"	l
vector199	obj/kernel.asm	/^vector199:$/;"	l
vector2	obj/kernel.asm	/^vector2:$/;"	l
vector20	obj/kernel.asm	/^vector20:$/;"	l
vector200	obj/kernel.asm	/^vector200:$/;"	l
vector201	obj/kernel.asm	/^vector201:$/;"	l
vector202	obj/kernel.asm	/^vector202:$/;"	l
vector203	obj/kernel.asm	/^vector203:$/;"	l
vector204	obj/kernel.asm	/^vector204:$/;"	l
vector205	obj/kernel.asm	/^vector205:$/;"	l
vector206	obj/kernel.asm	/^vector206:$/;"	l
vector207	obj/kernel.asm	/^vector207:$/;"	l
vector208	obj/kernel.asm	/^vector208:$/;"	l
vector209	obj/kernel.asm	/^vector209:$/;"	l
vector21	obj/kernel.asm	/^vector21:$/;"	l
vector210	obj/kernel.asm	/^vector210:$/;"	l
vector211	obj/kernel.asm	/^vector211:$/;"	l
vector212	obj/kernel.asm	/^vector212:$/;"	l
vector213	obj/kernel.asm	/^vector213:$/;"	l
vector214	obj/kernel.asm	/^vector214:$/;"	l
vector215	obj/kernel.asm	/^vector215:$/;"	l
vector216	obj/kernel.asm	/^vector216:$/;"	l
vector217	obj/kernel.asm	/^vector217:$/;"	l
vector218	obj/kernel.asm	/^vector218:$/;"	l
vector219	obj/kernel.asm	/^vector219:$/;"	l
vector22	obj/kernel.asm	/^vector22:$/;"	l
vector220	obj/kernel.asm	/^vector220:$/;"	l
vector221	obj/kernel.asm	/^vector221:$/;"	l
vector222	obj/kernel.asm	/^vector222:$/;"	l
vector223	obj/kernel.asm	/^vector223:$/;"	l
vector224	obj/kernel.asm	/^vector224:$/;"	l
vector225	obj/kernel.asm	/^vector225:$/;"	l
vector226	obj/kernel.asm	/^vector226:$/;"	l
vector227	obj/kernel.asm	/^vector227:$/;"	l
vector228	obj/kernel.asm	/^vector228:$/;"	l
vector229	obj/kernel.asm	/^vector229:$/;"	l
vector23	obj/kernel.asm	/^vector23:$/;"	l
vector230	obj/kernel.asm	/^vector230:$/;"	l
vector231	obj/kernel.asm	/^vector231:$/;"	l
vector232	obj/kernel.asm	/^vector232:$/;"	l
vector233	obj/kernel.asm	/^vector233:$/;"	l
vector234	obj/kernel.asm	/^vector234:$/;"	l
vector235	obj/kernel.asm	/^vector235:$/;"	l
vector236	obj/kernel.asm	/^vector236:$/;"	l
vector237	obj/kernel.asm	/^vector237:$/;"	l
vector238	obj/kernel.asm	/^vector238:$/;"	l
vector239	obj/kernel.asm	/^vector239:$/;"	l
vector24	obj/kernel.asm	/^vector24:$/;"	l
vector240	obj/kernel.asm	/^vector240:$/;"	l
vector241	obj/kernel.asm	/^vector241:$/;"	l
vector242	obj/kernel.asm	/^vector242:$/;"	l
vector243	obj/kernel.asm	/^vector243:$/;"	l
vector244	obj/kernel.asm	/^vector244:$/;"	l
vector245	obj/kernel.asm	/^vector245:$/;"	l
vector246	obj/kernel.asm	/^vector246:$/;"	l
vector247	obj/kernel.asm	/^vector247:$/;"	l
vector248	obj/kernel.asm	/^vector248:$/;"	l
vector249	obj/kernel.asm	/^vector249:$/;"	l
vector25	obj/kernel.asm	/^vector25:$/;"	l
vector250	obj/kernel.asm	/^vector250:$/;"	l
vector251	obj/kernel.asm	/^vector251:$/;"	l
vector252	obj/kernel.asm	/^vector252:$/;"	l
vector253	obj/kernel.asm	/^vector253:$/;"	l
vector254	obj/kernel.asm	/^vector254:$/;"	l
vector255	obj/kernel.asm	/^vector255:$/;"	l
vector26	obj/kernel.asm	/^vector26:$/;"	l
vector27	obj/kernel.asm	/^vector27:$/;"	l
vector28	obj/kernel.asm	/^vector28:$/;"	l
vector29	obj/kernel.asm	/^vector29:$/;"	l
vector3	obj/kernel.asm	/^vector3:$/;"	l
vector30	obj/kernel.asm	/^vector30:$/;"	l
vector31	obj/kernel.asm	/^vector31:$/;"	l
vector32	obj/kernel.asm	/^vector32:$/;"	l
vector33	obj/kernel.asm	/^vector33:$/;"	l
vector34	obj/kernel.asm	/^vector34:$/;"	l
vector35	obj/kernel.asm	/^vector35:$/;"	l
vector36	obj/kernel.asm	/^vector36:$/;"	l
vector37	obj/kernel.asm	/^vector37:$/;"	l
vector38	obj/kernel.asm	/^vector38:$/;"	l
vector39	obj/kernel.asm	/^vector39:$/;"	l
vector4	obj/kernel.asm	/^vector4:$/;"	l
vector40	obj/kernel.asm	/^vector40:$/;"	l
vector41	obj/kernel.asm	/^vector41:$/;"	l
vector42	obj/kernel.asm	/^vector42:$/;"	l
vector43	obj/kernel.asm	/^vector43:$/;"	l
vector44	obj/kernel.asm	/^vector44:$/;"	l
vector45	obj/kernel.asm	/^vector45:$/;"	l
vector46	obj/kernel.asm	/^vector46:$/;"	l
vector47	obj/kernel.asm	/^vector47:$/;"	l
vector48	obj/kernel.asm	/^vector48:$/;"	l
vector49	obj/kernel.asm	/^vector49:$/;"	l
vector5	obj/kernel.asm	/^vector5:$/;"	l
vector50	obj/kernel.asm	/^vector50:$/;"	l
vector51	obj/kernel.asm	/^vector51:$/;"	l
vector52	obj/kernel.asm	/^vector52:$/;"	l
vector53	obj/kernel.asm	/^vector53:$/;"	l
vector54	obj/kernel.asm	/^vector54:$/;"	l
vector55	obj/kernel.asm	/^vector55:$/;"	l
vector56	obj/kernel.asm	/^vector56:$/;"	l
vector57	obj/kernel.asm	/^vector57:$/;"	l
vector58	obj/kernel.asm	/^vector58:$/;"	l
vector59	obj/kernel.asm	/^vector59:$/;"	l
vector6	obj/kernel.asm	/^vector6:$/;"	l
vector60	obj/kernel.asm	/^vector60:$/;"	l
vector61	obj/kernel.asm	/^vector61:$/;"	l
vector62	obj/kernel.asm	/^vector62:$/;"	l
vector63	obj/kernel.asm	/^vector63:$/;"	l
vector64	obj/kernel.asm	/^vector64:$/;"	l
vector65	obj/kernel.asm	/^vector65:$/;"	l
vector66	obj/kernel.asm	/^vector66:$/;"	l
vector67	obj/kernel.asm	/^vector67:$/;"	l
vector68	obj/kernel.asm	/^vector68:$/;"	l
vector69	obj/kernel.asm	/^vector69:$/;"	l
vector7	obj/kernel.asm	/^vector7:$/;"	l
vector70	obj/kernel.asm	/^vector70:$/;"	l
vector71	obj/kernel.asm	/^vector71:$/;"	l
vector72	obj/kernel.asm	/^vector72:$/;"	l
vector73	obj/kernel.asm	/^vector73:$/;"	l
vector74	obj/kernel.asm	/^vector74:$/;"	l
vector75	obj/kernel.asm	/^vector75:$/;"	l
vector76	obj/kernel.asm	/^vector76:$/;"	l
vector77	obj/kernel.asm	/^vector77:$/;"	l
vector78	obj/kernel.asm	/^vector78:$/;"	l
vector79	obj/kernel.asm	/^vector79:$/;"	l
vector8	obj/kernel.asm	/^vector8:$/;"	l
vector80	obj/kernel.asm	/^vector80:$/;"	l
vector81	obj/kernel.asm	/^vector81:$/;"	l
vector82	obj/kernel.asm	/^vector82:$/;"	l
vector83	obj/kernel.asm	/^vector83:$/;"	l
vector84	obj/kernel.asm	/^vector84:$/;"	l
vector85	obj/kernel.asm	/^vector85:$/;"	l
vector86	obj/kernel.asm	/^vector86:$/;"	l
vector87	obj/kernel.asm	/^vector87:$/;"	l
vector88	obj/kernel.asm	/^vector88:$/;"	l
vector89	obj/kernel.asm	/^vector89:$/;"	l
vector9	obj/kernel.asm	/^vector9:$/;"	l
vector90	obj/kernel.asm	/^vector90:$/;"	l
vector91	obj/kernel.asm	/^vector91:$/;"	l
vector92	obj/kernel.asm	/^vector92:$/;"	l
vector93	obj/kernel.asm	/^vector93:$/;"	l
vector94	obj/kernel.asm	/^vector94:$/;"	l
vector95	obj/kernel.asm	/^vector95:$/;"	l
vector96	obj/kernel.asm	/^vector96:$/;"	l
vector97	obj/kernel.asm	/^vector97:$/;"	l
vector98	obj/kernel.asm	/^vector98:$/;"	l
vector99	obj/kernel.asm	/^vector99:$/;"	l
void	obj/kernel.asm	/^void *$/;"	l
void	obj/kernel.asm	/^void __attribute__((noinline))$/;"	l
void	obj/kernel.asm	/^void grade_backtrace(void);$/;"	l
void	obj/kernel.asm	/^void$/;"	l
width	obj/kernel.asm	/^                width = 0;$/;"	d
width	obj/kernel.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/kernel.asm	/^        width = precision = -1;$/;"	d
OBJPREFIX	tools/function.mk	/^OBJPREFIX	:= __objs_$/;"	m
add_dependency	tools/function.mk	/^add_dependency = $(eval $(1): $(2))$/;"	m
add_files	tools/function.mk	/^add_files = $(eval $(call do_add_files_to_packet,$(1),$(2),$(3),$(4),$(5)))$/;"	m
add_objs	tools/function.mk	/^add_objs = $(eval $(call do_add_objs_to_packet,$(1),$(2)))$/;"	m
cc_compile	tools/function.mk	/^cc_compile = $(eval $(call do_cc_compile,$(1),$(2),$(3),$(4)))$/;"	m
cc_template	tools/function.mk	/^define cc_template$/;"	m
create_target	tools/function.mk	/^create_target = $(eval $(call do_create_target,$(1),$(2),$(3),$(4),$(5)))$/;"	m
do_add_files_to_packet	tools/function.mk	/^define do_add_files_to_packet$/;"	m
do_add_objs_to_packet	tools/function.mk	/^define do_add_objs_to_packet$/;"	m
do_cc_compile	tools/function.mk	/^define do_cc_compile$/;"	m
do_create_target	tools/function.mk	/^define do_create_target$/;"	m
do_finish_all	tools/function.mk	/^define do_finish_all$/;"	m
finish_all	tools/function.mk	/^finish_all = $(eval $(call do_finish_all))$/;"	m
listf	tools/function.mk	/^listf = $(filter $(if $(2),$(addprefix %.,$(2)),%),\\$/;"	m
packetname	tools/function.mk	/^packetname = $(if $(1),$(addprefix $(OBJPREFIX),$(1)),$(OBJPREFIX))$/;"	m
read_packet	tools/function.mk	/^read_packet = $(foreach p,$(call packetname,$(1)),$($(p)))$/;"	m
todep	tools/function.mk	/^todep = $(patsubst %.o,%.d,$(call toobj,$(1),$(2)))$/;"	m
toobj	tools/function.mk	/^toobj = $(addprefix $(OBJDIR)$(SLASH)$(if $(2),$(2)$(SLASH)),\\$/;"	m
totarget	tools/function.mk	/^totarget = $(addprefix $(BINDIR)$(SLASH),$(1))$/;"	m
build_run	tools/grade.sh	/^build_run() {$/;"	f
check_regexps	tools/grade.sh	/^check_regexps() {$/;"	f
check_result	tools/grade.sh	/^check_result() {$/;"	f
fail	tools/grade.sh	/^fail() {$/;"	f
get_time	tools/grade.sh	/^get_time() {$/;"	f
make_print	tools/grade.sh	/^make_print() {$/;"	f
pass	tools/grade.sh	/^pass() {$/;"	f
quick_check	tools/grade.sh	/^quick_check() {$/;"	f
quick_run	tools/grade.sh	/^quick_run() {$/;"	f
run_qemu	tools/grade.sh	/^run_qemu() {$/;"	f
run_test	tools/grade.sh	/^run_test() {$/;"	f
show_build_tag	tools/grade.sh	/^show_build_tag() {$/;"	f
show_check_tag	tools/grade.sh	/^show_check_tag() {$/;"	f
show_final	tools/grade.sh	/^show_final() {$/;"	f
show_msg	tools/grade.sh	/^show_msg() {$/;"	f
show_part	tools/grade.sh	/^show_part() {$/;"	f
show_time	tools/grade.sh	/^show_time() {$/;"	f
update_score	tools/grade.sh	/^update_score() {$/;"	f
main	tools/sign.c	/^main(int argc, char *argv[]) {$/;"	f
main	tools/vector.c	/^main(void) {$/;"	f
